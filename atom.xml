<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Find Your Way Out</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://complicatedphenomenon.gitlab.io/"/>
  <updated>2019-12-07T05:35:44.304Z</updated>
  <id>https://complicatedphenomenon.gitlab.io/</id>
  
  <author>
    <name>ComplicatedPhenomenon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MYSQL</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/11/12/MYSQL/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/11/12/MYSQL/</id>
    <published>2019-11-12T12:41:48.000Z</published>
    <updated>2019-12-07T05:35:44.304Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/7JVBkckpaehQk/giphy.gif" alt><br><a id="more"></a></p><h1 id="Architecture-of-MySQL"><a href="#Architecture-of-MySQL" class="headerlink" title="Architecture of MySQL"></a>Architecture of MySQL</h1><p><img src="/uploads/mysql.png" alt><br><img src="/uploads/sqlframe.png" alt></p><h1 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h1><p>Index is a data structure, mainly B-tree in mysql,</p><ul><li><p>Advantages of index</p><ul><li>Increase efficiency of search. (Decrease IO usage rate)</li><li>Decrease the usage rate of cpu.</li></ul></li><li><p>Limitation of index</p><ul><li>Index itself cost memory. If the database is not that big, no need to create index.</li><li>It doesn’t apply to some case, when the database is very large, and the column is seldom changed can be index.</li><li>Decrease the efficiency to delete, modify, update</li></ul></li><li><p>primary key</p></li><li><p>foreign key</p><p>A foreign key is a key used to link two tables together. This is sometimes also called as a referencing key.</p></li></ul><p>PRIMARY KEY vs. UNIQUE KEY vs. KEY vs. FOREIGN KEY<br><a href="https://www.tutorialcup.com/dbms/b-tree.htm" target="_blank" rel="noopener">https://www.tutorialcup.com/dbms/b-tree.htm</a></p><h1 id="Frequently-used-query"><a href="#Frequently-used-query" class="headerlink" title="Frequently used query"></a>Frequently used query</h1><p>How to design a relational database?</p><p>Here we use an existed database <code>classicmodels</code>.<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql> USE classicmodels;</span><br><span class="line">mysql> SHOW TABLES;</span><br><span class="line">+-------------------------+</span><br><span class="line">| Tables_in_classicmodels |</span><br><span class="line">+-------------------------+</span><br><span class="line">| commitees               |</span><br><span class="line">| customers               |</span><br><span class="line">| employees               |</span><br><span class="line">| memebers                |</span><br><span class="line">| offices                 |</span><br><span class="line">| orderdetails            |</span><br><span class="line">| orders                  |</span><br><span class="line">| payments                |</span><br><span class="line">| productlines            |</span><br><span class="line">| products                |</span><br><span class="line">+-------------------------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure><p></p><ul><li><p><code>SHOW COLUMNS</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">FULL</span> <span class="keyword">COLUMNS</span></span><br><span class="line"><span class="keyword">FROM</span>  orders;</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>DESC</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESCRIBE</span> orders;</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>SELECT</code></p><p>prototype: <code>SELECT select_list FROM table_name WHERE search_condition;</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    productCode,</span><br><span class="line">    productName,</span><br><span class="line">    buyPrice</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    products</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    buyPrice <span class="keyword">BETWEEN</span> <span class="number">80</span> <span class="keyword">AND</span> <span class="number">90</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>join</code></p><p>A relational database consists of multiple related tables linking together using common columns which are known as foreign key columns.</p><p>To get complete <code>orders</code>’ information, you need to query data from both orders and  <code>orderdetails</code> tables.</p><p><img src="/uploads/join.jpg" style="width: 80%; height: 80%" ​></p><p><a href="http://www.mysqltutorial.org/mysql-join/" target="_blank" rel="noopener">http://www.mysqltutorial.org/mysql-join/</a></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">      m.member_id, m.name <span class="keyword">member</span>, c.committee_id, c.name committee</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">      members <span class="keyword">AS</span> m</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span></span><br><span class="line">      committees <span class="keyword">AS</span> c</span><br><span class="line"><span class="keyword">USING</span>(<span class="keyword">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">      m.member_id, m.name <span class="keyword">member</span>, c.committee_id, c.name committee</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">      members <span class="keyword">AS</span> m</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> committees <span class="keyword">AS</span> c;</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>create</code></p><ul><li><p>create database, table</p></li><li><p>save the query in the database server and assign a name to it, the named query is <code>view</code>.</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> customerPayments</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    customerName,</span><br><span class="line">    checkNumber,</span><br><span class="line">    paymentDate,</span><br><span class="line">    amount</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    customers</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">    payments <span class="keyword">USING</span> (customerNumber);</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p><code>alter</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(column_list);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> constraint_name</span><br><span class="line"><span class="keyword">UNIQUE</span> (column_list);</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>drop</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> table_name;</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>status</code></p>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span></span><br><span class="line">    <span class="keyword">table</span> <span class="keyword">status</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    <span class="keyword">name</span> = <span class="string">'orders'</span>;</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="sql-optimization"><a href="#sql-optimization" class="headerlink" title="sql optimization"></a>sql optimization</h1><p>Why do we need to optimize sql?</p><ul><li>Bad Performance<ul><li>executing time too long</li><li>waiting time too long</li></ul></li><li>query on multiple tables</li><li>Index lose effectiveness</li><li>Bad setup Server parameter</li></ul><h1 id="Principles-behind"><a href="#Principles-behind" class="headerlink" title="Principles behind"></a>Principles behind</h1><h2 id="The-workflow-of-executing-a-sql-query"><a href="#The-workflow-of-executing-a-sql-query" class="headerlink" title="The workflow of executing a sql query"></a>The workflow of executing a sql query</h2><p><img src="/uploads/sqlworkflow.png" style="width: 80%; height: 80%" ​></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://www.cnblogs.com/annsshadow/p/5037667.html" target="_blank" rel="noopener">https://www.cnblogs.com/annsshadow/p/5037667.html</a></li><li><a href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/7JVBkckpaehQk/giphy.gif&quot; alt&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="DataBases" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/DataBases/"/>
    
    
  </entry>
  
  <entry>
    <title>SVN &amp; Git in action</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/05/23/svn-git-in-action/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/05/23/svn-git-in-action/</id>
    <published>2019-05-23T05:56:20.000Z</published>
    <updated>2019-12-11T03:16:07.557Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/l0Ex5yl7V4UEBmhcQ/giphy.gif" alt></p><p>If you have experience with <code>git</code>, then it is easier to svn.</p><a id="more"></a><h1 id="basic-operation"><a href="#basic-operation" class="headerlink" title="basic operation"></a>basic operation</h1><div class="table-container"><table><thead><tr><th>git</th><th>svn</th></tr></thead><tbody><tr><td><code>git init</code></td><td><code>svnadmin create</code></td></tr><tr><td><code>git clone <hostAddr></code></td><td><code>svn checkout <hostAddr></code></td></tr><tr><td><code>git push -u origin master</code></td><td><code>svn commit -m ""</code></td></tr><tr><td><code>git log -l 10</code></td><td><code>svn log -l 10</code></td></tr><tr><td><code>git reset --hard <commit></code></td><td><code>svn co -r 3 remoteUrl</code></td></tr><tr><td><code>git remote -v</code></td><td><code>svn unfo</code></td></tr></tbody></table></div><p>Distinguish <code>svn checkout</code> and <code>svn import</code>.<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ svn checkout <span class="comment">#  check the same from other Linux machine remotely by checking out SVN command.</span></span><br><span class="line">$ svn import <span class="comment"># import new project to local SVN server to move forward.</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>Pipe the output through less or other pager.<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> svnlog=<span class="string">'svn log -l 30 | less'</span></span><br></pre></td></tr></tbody></table></figure><p></p><ul><li><a href="https://devhints.io/?q=git" target="_blank" rel="noopener">Cheatsheet for popular software</a></li></ul><h1 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h1><p><a href="http://web.archive.org/web/20110316170621/http://www.duchnik.com/tutorials/vc/svn-command-reference" target="_blank" rel="noopener">A walkthrough in SVN</a></p><blockquote><p>Rather than just give a list of command and what they do, in the section I wanted to cover some real world scenarios that you will come across and how to handle them. You will see the specific commands to use, and learn what they do as you apply them.</p></blockquote><p><a href="https://www.2daygeek.com/svn-command-examples/" target="_blank" rel="noopener">https://www.2daygeek.com/svn-command-examples/</a> as a vivid tutorial place you into the real scenarios when using SVN.</p><ul><li><p><code>svn revert</code></p><blockquote><p>Once in a while, someone commits a revision that has to be rolled back later for some reason. If a commit really has to disappear without traces for some reason, the only way is to import your repository into a new one leaving out the offending commit. That’s a rather drastic measure causing all kinds of problems with existing working copies, so use it with great care. (Such an insightful description.)</p></blockquote></li><li><p><a href="https://stackoverflow.com/questions/497670/whats-a-simple-way-to-undelete-a-file-in-subversion" target="_blank" rel="noopener">What’s the simplest way to undelete a file in SVN?</a></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ touch test.txt <span class="comment"># create a new file</span></span><br><span class="line">$ svn add test.txt</span><br><span class="line">$ rm test.txt</span><br><span class="line">$ svn rm test.txt</span><br><span class="line">$ svn rm ansvnfile.txt <span class="comment"># recover a svn delete file before check in</span></span><br><span class="line">$ svn revert ansvnfile.txt</span><br></pre></td></tr></tbody></table></figure></li><li><p>Setup a local svn server</p></li><li>Github’s support for Subversion clients<ul><li><a href="https://help.github.com/en/articles/support-for-subversion-clients" target="_blank" rel="noopener">https://help.github.com/en/articles/support-for-subversion-clients</a></li></ul></li></ul><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><ul><li><p>How to remove the committed change?</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard ASpecifcCommit</span><br><span class="line">git push --force origin master</span><br></pre></td></tr></tbody></table></figure></li><li><p>look up the commiters’ of this the project?</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git shortlog --summary --numbered --email # or git shortlog --sne</span><br></pre></td></tr></tbody></table></figure></li><li><p>show the remote url of this repo</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --get remote.origin.url</span><br><span class="line">git remote show origin</span><br></pre></td></tr></tbody></table></figure></li><li><p>look into <code>.git</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(base) wm@wm:~/Playground/GH/Fortran_training$ git <span class="built_in">log</span> --format=raw -1 <span class="comment">#-n 1</span></span><br><span class="line">commit 98a965d825cfb6e8704e2f32e30110f7c9416dd4</span><br><span class="line">tree 9de565656dc5092428db9a9bb17a935069be998b</span><br><span class="line">parent 135031abdc4c1ec5d99c46b1523908dc467ed3d4</span><br><span class="line">author ComplicatedPhenomenon <czfzdxx@outlook.com> 1573827703 +0800</span><br><span class="line">committer ComplicatedPhenomenon <czfzdxx@outlook.com> 1573827703 +0800</span><br><span class="line"></span><br><span class="line">    Reconstruct the this repo<span class="string">'s structure :haircut_woman:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(base) wm@wm:~/Playground/GH/Fortran_training$ git cat-file -p 9de56</span></span><br><span class="line"><span class="string">100644 blob 67dabbab6deab17231ecab66698d1b851960af9f    .gitignore</span></span><br><span class="line"><span class="string">040000 tree d2aaaafb2925490fe9b1d52d14e4afc48b20e646    Algorithm</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="Recommendations-of-tutorial"><a href="#Recommendations-of-tutorial" class="headerlink" title="Recommendations of tutorial"></a>Recommendations of tutorial</h1><ul><li>ttps://www.atlassian.com/git/tutorials/merging-vs-rebasing</li><li><a href="https://cheatsheet.dennyzhang.com/cheatsheet-git-a4" target="_blank" rel="noopener">https://cheatsheet.dennyzhang.com/cheatsheet-git-a4</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/l0Ex5yl7V4UEBmhcQ/giphy.gif&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;If you have experience with &lt;code&gt;git&lt;/code&gt;, then it is easier to svn.&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="SVN &amp; Git" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/SVN-Git/"/>
    
    
      <category term="source code management" scheme="https://complicatedphenomenon.gitlab.io/tags/source-code-management/"/>
    
  </entry>
  
  <entry>
    <title>Multithreading principle</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/04/21/Multithreading/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/04/21/Multithreading/</id>
    <published>2019-04-21T01:05:28.000Z</published>
    <updated>2019-11-12T14:02:52.030Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/HrsNyjB5yuKZO/giphy.gif" style="width: 60%; height: 60%" ​><br>I will try to demonstrate how multithreading works? In other words, how OS, CPU, memory, registers join together to implement multithreading?<br><a id="more"></a></p><p>When you first take a peek of multithreading, you should know what does it existed for, then you know how to multithread in every programming language, well, you meet the its syntax, yet you don’t know how the function was implemented, they encapsulate the function into API<sup><a href="#fn_1" id="reffn_1">1</a></sup><sup><a href="#fn_2" id="reffn_2">2</a></sup>, only you look up the the manual then you know what’s this function is used for, what’s its input parameters and return value. The API still doesn’t help you know the working mechanism, if you don’t go through the source code, which is based on the principle of multithreading.</p><p>Why do you need to know the principle? Well, because you need to fully understand it then you can write your own API to implement multithreading.</p><p>Why do you need to write your own API? because only you know every detail then your knowledge become transformative enough, that’s how you adapt your knowledge to solve the real world problem and dig further.</p><h2 id="How-are-threads-scheduled-to-physical-CPUs"><a href="#How-are-threads-scheduled-to-physical-CPUs" class="headerlink" title="How are threads scheduled to physical CPUs?"></a>How are threads scheduled to physical CPUs?</h2><blockquote><p>Well, the OS sets the physical CPU registers to the appropriate values and jumps to the location where the thread was last interrupted (which in effect sets the instruction pointer). At this point the OS has lost control and is no longer involved. It can only regain control if a hardware interrupt occurs or some other physical CPU core decides to take control of the CPU.</p></blockquote><h2 id="How-to-multithread-your-code-in-C"><a href="#How-to-multithread-your-code-in-C" class="headerlink" title="How to multithread your code in C?"></a>How to multithread your code in C?</h2><p><a href="https://software.intel.com/en-us/articles/threading-models-for-high-performance-computing-pthreads-or-openmp" target="_blank" rel="noopener">Threading Models for High-Performance Computing: Pthreads or OpenMP?</a></p><p>There are 2 built-in libraries for</p><ul><li>OpenMP</li><li><p>Pthreads</p><p> Pthreads are occasionally referred to as POSIX(Portable Operating System Interface) threads. Essentially, the POSIX committee defined a basic set of functions and data structures that it hoped would be adopted by numerous vendors so that threaded code could be ported easily across operating systems.</p><p><a href="https://randu.org/tutorials/threads/" target="_blank" rel="noopener">POSIX pthreads tutorial</a>.</p></li></ul><h2 id="Multi-threading-library-in-C"><a href="#Multi-threading-library-in-C" class="headerlink" title="Multi-threading library in C"></a>Multi-threading library in C</h2><p>Thread state</p><ul><li>(就绪) ready</li><li>(阻塞) block</li></ul><h3 id="POSIX-threads"><a href="#POSIX-threads" class="headerlink" title="POSIX threads"></a>POSIX threads</h3><p>You don’t need to care about the architecture behind Multithreading model. Your main aim is to apply multithreading in programming via the library  <code>pthread</code>.</p><blockquote><p>All Pthreads threads have certain properties. Each one has an identifier, a set of registers (including the program counter), and a set of attributes, which are stored in a structure. The attributes include the stack size, scheduling parameters, and other items needed to use the thread.</p></blockquote><p><a href="https://www.includehelp.com/articles/threading-in-c-programming-language-with-gcc-linux.aspx" target="_blank" rel="noopener"><code><pthread.h></code> basic usage</a>:</p><ul><li><p>Create a thread</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_create</span><span class="params">(<span class="keyword">pthread_t</span> *thread, <span class="keyword">const</span> <span class="keyword">pthread_attr_t</span> *attr, <span class="keyword">void</span> *(*start_routine) (<span class="keyword">void</span> *), <span class="keyword">void</span> *arg)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>pthread_create()的返回值表示线程创建是否成功</p><p>尽管<code>arg</code>是<code>void*</code>类型的变量，但它同样可以作为任意类型的参数传给<code>start_routine()</code>函数；同时，<code>start_routine()</code>可以返回一个<code>void*</code>类型的返回值，而这个返回值也可以是其他类型，并由<code>pthread_join()</code>获取。</p><p>创建线程成功后，新创建的线程则运行参数三和参数四确定的函数，原来的线程则继续运行下一行代码。</p><ul><li><p><code>pthread_t *thread</code></p><p><code>thread</code> 返回创建的线程ID</p><p>It is the pointer to a <code>pthread_t</code> variable which is used to store thread id of new created thread.</p></li><li><p><code>const pthread_attr_t *attr</code></p><p><code>attr</code>是创建线程时设置的线程属性</p><p><code>attr</code>: An opaque attribute object that may be used to set thread attributes. You can specify a thread attributes object, or NULL for the default values.</p><p>It is the pointer to a thread attribute object which is used to set thread attributes, NULL can be used to create a thread with default arguments.</p><p><code>attr</code>参数是一个结构指针，结构中的元素分别对应着新线程的运行属性，主要包括以下几项：</p><ul><li><code>__detachstate</code></li><li><code>__schedpolicy</code></li><li><code>__schedparam</code></li><li>…</li></ul></li><li><p><code>void *(*start_routine) (void *)</code></p><p>It is the pointer to a thread function; this function contains the code segment which is executed by the thread.</p></li><li><p><code>void *arg</code></p><p>It is the thread functions argument of the type <code>void*</code>, you can pass what is necessary for the function using this parameter.</p></li><li><p><code>int</code> (return type)</p><p>If thread created successfully, return value will be 0 (Zero) otherwise pthread_create will return an error number of type integer.</p></li><li><p><a href="https://stackoverflow.com/questions/6990888/c-how-to-create-thread-using-pthread-create-function" target="_blank" rel="noopener">How to create thread using pthread_create</a></p></li></ul></li><li><p>Join a thread</p><p>When the newly-created thread has finished doing it’s bits, we need to join everything back up. This is done by the <code>pthread_join</code> function which takes two parameters: the <code>pthread_t</code> variable used when pthread_create was called (not a pointer this time) and a pointer to the return value pointer (don’t worry about this for now – just set it to NULL). This call will look something like <code>pthread_join(thread0, NULL)</code></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_join</span><span class="params">(<span class="keyword">pthread_t</span> thread, <span class="keyword">void</span> **status)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p><code>pthread_t</code> is the data type used to uniquely identify a thread.</p><p><code>status</code> contains a pointer to the status argument passed by the ending thread as part of <code>pthread_exit()</code>. If the ending thread terminated with a return, status contains a pointer to the return value. If the thread was canceled, status can be set to -1.</p><p>thread:等待线程的标识符 status:用户定义的指针，用来存储被等待线程的返回值（不为NULL时）</p><p>需要注意的是一个线程仅允许唯一的一个线程使用 <code>pthread_join()</code>等待它的终止，并且被等待的线程应该处于可join状态，即非DETACHED状态。</p></li><li><p>Exit a thread</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pthread_exit</span> <span class="params">(<span class="keyword">void</span> *status)</span></span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>Wait</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_join</span> <span class="params">(<span class="keyword">pthread_t</span> tid, <span class="keyword">void</span> ** status)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>Allows the calling thread to wait for the ending of the target thread.</p></li></ul><h3 id="OpenMP"><a href="#OpenMP" class="headerlink" title="OpenMP"></a>OpenMP</h3><p>Running <code>openmp.c</code><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang: error: unsupported option '-fopenmp'</span><br></pre></td></tr></tbody></table></figure><p></p><p><a href="https://stackoverflow.com/a/36211162/7583919" target="_blank" rel="noopener">Reason for why</a></p><blockquote><p>You installed <code>gcc</code> with <code>Homebrew</code>, yet the error is from <code>clang</code>. That should simply mean that your default compiler still points to <code>clang</code> instead of the newly installed <code>gcc</code>.</p></blockquote><p>Instead, point those variables to something in <code>/usr/local/bin</code>, e.g.:<br>    </p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> CC=/usr/<span class="built_in">local</span>/bin/gcc</span><br></pre></td></tr></tbody></table></figure><p></p><p>and similar for the other two variables, <code>CXX</code> and <code>MPICXX</code>, e.g.:<br>    </p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> CC=/usr/<span class="built_in">local</span>/bin/gcc;CXX=/usr/<span class="built_in">local</span>/bin/g++;MPICXX=/usr/<span class="built_in">local</span>/bin/mpicxx</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="Multithreading-in-CPP"><a href="#Multithreading-in-CPP" class="headerlink" title="Multithreading in CPP"></a>Multithreading in CPP</h2><ul><li><a href="https://hackernoon.com/learn-c-multi-threading-in-5-minutes-8b881c92941f" target="_blank" rel="noopener">Learn C++ Multi-Threading in 5 Minutes</a></li></ul><h2 id="Multithreading-in-Fortran"><a href="#Multithreading-in-Fortran" class="headerlink" title="Multithreading in Fortran"></a>Multithreading in Fortran</h2><p><a href="http://fortranwiki.org/fortran/show/Parallelization" target="_blank" rel="noopener">Various strategies and tools </a>for parallelization of Fortran code using multithreading and/or multiprocessing.</p><ul><li>Co-arrays</li><li><a href="https://complicatedphenomenon.github.io/2019/01/03/High-Performance-Computing/#more" target="_blank" rel="noopener">MPI</a><ul><li>Open MPI</li><li>MPICH</li></ul></li><li><p><a href="https://computing.llnl.gov/tutorials/openMP/" target="_blank" rel="noopener">OpenMP</a></p><p>You must enable OpenMP during compilation.</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gfortran -fopenmp -o omp_par_do omp_par_do.f90</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="Multithreading-in-Python"><a href="#Multithreading-in-Python" class="headerlink" title="Multithreading in Python"></a>Multithreading in Python</h2><ul><li><code>multiprocessing</code></li><li><code>threading</code></li><li><p><code>concurrent.futures</code></p><ul><li><code>ThreadPoolExecutor</code></li><li><code>ProcessPoolExecutor</code></li></ul><p><code>concurrent.futures</code> abstract away a lot of complicated details about using multiple threads or processes and allows the user to focus on accomplishing the task at hand.</p><p>This is much like Fortran, with the assistant of high level API of <code>coarray</code>, researchers take care the big problems without knowing how <code>coarray</code> is implemented.</p></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>Basic usage, show how it works in a programs, analyze little how it works with hardware</p><ul><li><a href="http://zhangxiaoya.github.io/2015/05/15/multi-thread-of-c-program-language-on-linux/" target="_blank" rel="noopener">Linux 下多线程（C语言）</a></li><li><a href="https://yq.aliyun.com/articles/244354" target="_blank" rel="noopener"><code>pthread_create</code>用法</a></li><li><a href="https://timmurphy.org/2010/05/04/pthreads-in-c-a-minimal-working-example/" target="_blank" rel="noopener">pthreads in C – a minimal working example</a></li></ul><p>Principles behind parallel programming. An original authoritative tutorial:</p><ul><li><p><a href="https://computing.llnl.gov/tutorials/pthreads/" target="_blank" rel="noopener">POSIX Threads Programming</a> by Lawrence Livermore National Laboratory.</p></li><li><p><a href="https://coarrays.sourceforge.io/doc.html" target="_blank" rel="noopener">Parallel programming with Fortran 2008 and 2018 coarrays</a></p></li><li><a href="https://www.gribblelab.org/CBootCamp/A2_Parallel_Programming_in_C.html" target="_blank" rel="noopener">Parallel programming in C</a></li></ul><blockquote id="fn_1"><sup>1</sup>. 如果别人要使用你写的库，并不需要知道每个函数内部是怎么实现的。使用的人需要看你的文档或者注释才知道这个函数的入口参数和返回值或者这个函数是用来做什么的。对于用户来说 ，你的这些函数就是API。API(Application Programming Interface应用程序编程接口) 是一些预先定义好的函数，目的是提供应用程序以及开发人员基于某软件或硬件得以访问一组例程的能力。<a href="#reffn_1" title="Jump back to footnote [1] in the text."> ↩</a></blockquote><blockquote id="fn_2"><sup>2</sup>. 把某些功能封装好，方便其他人调用。调用的人可以很方便使用这些功能，并且可以不需要知道这些功能的具体实现过程。接API就是按照作者规定的流程去调用这些功能。<a href="#reffn_2" title="Jump back to footnote [2] in the text."> ↩</a></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Make full use of an PC&#39;s computation capacity
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Parallel Programming" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Parallel-Programming/"/>
    
    
      <category term="HPC" scheme="https://complicatedphenomenon.gitlab.io/tags/HPC/"/>
    
  </entry>
  
  <entry>
    <title>Connect two personal computers via ssh</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/03/23/Connect-2-personal-computer-via-ssh/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/03/23/Connect-2-personal-computer-via-ssh/</id>
    <published>2019-03-23T13:38:36.000Z</published>
    <updated>2019-11-12T14:02:52.030Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/TrArZd6orlkQg/giphy.gif" alt><br>Suppose you have a portable pc and another cumbersome pc with high performance configuration. Then it would be great if you can control the later from the former.<br><a id="more"></a></p><h1 id="My-intention"><a href="#My-intention" class="headerlink" title="My intention"></a>My intention</h1><ul><li>Mac as client</li><li>Fedora as server</li></ul><blockquote><p>The term “server” is often used a bit loosely. Here, we mean by the term is a process running on a computer that is tasked with managing access to a computer’s resources over a network.</p></blockquote><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/os-release</span><br><span class="line">NAME = Fedora</span><br><span class="line">VERSION = <span class="string">"29 (Workstation Edition)"</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">$ sudo dnf install openssh-server</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$(whoami)</span>@<span class="variable">$(hostname)</span>"</span></span><br><span class="line">xxx@yyy</span><br><span class="line">$ ssh xxx@yyy</span><br><span class="line">Last login: Thu Mar 21 HH:MM:SS YYYY from ::1</span><br></pre></td></tr></tbody></table></figure><p>Mac has a native SSH client built directly into the command line</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -V</span><br><span class="line">OpenSSH_7.9p1, LibreSSL 2.7.3</span><br><span class="line">$ ssh wm@localhost.localdomain</span><br><span class="line">ssh_exchange_identification: Connection closed by remote host</span><br></pre></td></tr></tbody></table></figure><p>It’s bound to fail, the server doesn’t know this client.</p><blockquote><p>To copy your public key to a server, allowing you to authenticate without a password.</p></blockquote><p>Approaches</p><ul><li>If you currently <strong>have password-based SSH access configured to your server</strong>, and you have the ssh-copy-id utility installed, this is a simple process. ❌</li><li>If you do not have the ssh-copy-id utility available, but <strong>still have password-based SSH access to the remote server</strong>, you can copy the contents of your public key in a different way. ❌</li><li>If you do not have password-based SSH access available, you will have to add your public key to the remote server manually. ✔ 💓</li></ul><p>On Mac<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line">public_key_string</span><br></pre></td></tr></tbody></table></figure><p></p><p>Go to Fedora<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> public_key_string >> ~/.ssh/authorized_keys</span><br></pre></td></tr></tbody></table></figure><p></p><p>Now the server should know this client.</p><p>on Mac<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ ssh wm@localhost.localdomain</span><br><span class="line">ssh_exchange_identification: Connection closed by remote host</span><br><span class="line">$(<span class="built_in">which</span> sshd) -Ddp 10222</span><br><span class="line">debug1: sshd version OpenSSH_7.9, LibreSSL 2.7.3</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ed25519_key</span><br><span class="line">sshd: no hostkeys available -- exiting.</span><br><span class="line">$ sudo ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key</span><br><span class="line">$ sudo chmod 600 /etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_ecdsa_key /etc/ssh/ssh_host_ed25519_key</span><br><span class="line">$ /usr/sbin/sshd</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ed25519_key</span><br><span class="line">sshd: no hostkeys available -- exiting.</span><br><span class="line">$ ls /etc/ssh/</span><br><span class="line">moduli                    ssh_host_ecdsa_key        ssh_host_rsa_key</span><br><span class="line">ssh_config                ssh_host_ecdsa_key.pub    ssh_host_rsa_key.pub</span><br><span class="line">ssh_host_dsa_key          ssh_host_ed25519_key      sshd_config</span><br><span class="line">ssh_host_dsa_key.pub      ssh_host_ed25519_key.pub</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$(whoami)</span>@<span class="variable">$(hostname)</span>"</span></span><br><span class="line">mmm@www</span><br><span class="line">$ ssh mmm@www</span><br><span class="line">Password:</span><br><span class="line">Last login: Thu Mar 21 19:03:24 2019</span><br></pre></td></tr></tbody></table></figure><p></p><p>On Fedora</p><ul><li><p>Have I enabled the function of the server?</p><p><code>SSHSERVER=-YES-</code>, I have to <code>sudo reboot</code> to restart ssh to make the modification take effects. Restart the SSH service <code>sudo service sshd restart</code></p></li></ul><p>Something is wrong with my usage</p><p>On Fedora(server)<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$curl</span> ifconfig.me</span><br><span class="line">iioooo</span><br></pre></td></tr></tbody></table></figure><p></p><blockquote><p>The IP address you found above with “ifconfig” is the private IP address of your computer on your local network.</p></blockquote><p>On Mac<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh wm@iioooo</span><br></pre></td></tr></tbody></table></figure><p></p><p>Re-check the host-address. Finally, finally, I made it. 🧗‍🚣‍</p><ul><li>Make sure that your client machine is on the same network as the server.</li><li>Figure out the right address of the server.</li></ul><p>What if the server and client is on different network?</p><ul><li><a href="https://askubuntu.com/a/749232/665584" target="_blank" rel="noopener">port forwarding on a receiving router is the key</a></li></ul><h1 id="Using-case"><a href="#Using-case" class="headerlink" title="Using case"></a>Using case</h1><ul><li>How to transfer a file from local to remote or vice versa?<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ scp username@host:/path/to/target /path/to/tdestination</span><br><span class="line">$ scp /path/to/target username@host:/path/to/destination</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://dev.to/zduey/how-to-set-up-an-ssh-server-on-a-home-computer" target="_blank" rel="noopener">Set up a ssh server on a home computer</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/TrArZd6orlkQg/giphy.gif&quot; alt&gt;&lt;br&gt;Suppose you have a portable pc and another cumbersome pc with high performance configuration. Then it would be great if you can control the later from the former.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="ssh" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/ssh/"/>
    
    
      <category term="ssh" scheme="https://complicatedphenomenon.gitlab.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Bookmarks collected along the way</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/01/31/Bookmarks-collected-along-the-way/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/01/31/Bookmarks-collected-along-the-way/</id>
    <published>2019-01-31T12:18:06.000Z</published>
    <updated>2019-12-21T08:49:31.533Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/XNHc16JIlYKpa/giphy.gif" alt></p><p>I have been busy recently and cannot find a spare time for preparing a decent blog post. Inspired by the awesome list posted on Github, better to tidy up things collected along the way.</p><a id="more"></a><h2 id="🛸-Pioneer"><a href="#🛸-Pioneer" class="headerlink" title="🛸 Pioneer"></a>🛸 Pioneer</h2><ul><li><a href="http://www.aaronsw.com/weblog/archive" target="_blank" rel="noopener">Aaron Swartz</a></li></ul><h2 id="nut-and-bolt-wrench-Web-development"><a href="#nut-and-bolt-wrench-Web-development" class="headerlink" title=":nut_and_bolt: :wrench: Web development"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f529.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f529.png?v8">🔩</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f527.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f527.png?v8">🔧</span> Web development</h2><ul><li>WordPress<ul><li>Elementor editor</li><li><a href="https://precisethemes.com/docs/yugen/" target="_blank" rel="noopener">Yugen theme</a></li></ul></li><li>Django<ul><li><a href="https://simpleisbetterthancomplex.com/" target="_blank" rel="noopener">Simple is more better than complex</a></li><li><a href="https://jennifermack.net/2017/02/04/bootstrapping-a-jekyll-blog-using-gitlab/" target="_blank" rel="noopener">Jennifer Mack</a></li><li><a href="https://tendcode.com" target="_blank" rel="noopener">A guy made obvious achievement</a>, he makes his points clear.</li><li><a href="http://www.spiderpy.cn/blog/index/" target="_blank" rel="noopener">j_hao104</a>, he wrote a good template.</li><li><a href="http://andrewliu.in/about/" target="_blank" rel="noopener">andrewliu</a>, he made much efforts to it.</li></ul></li><li>Static website generator<ul><li><a href="https://github.com/swanson/lagom" target="_blank" rel="noopener">Lagom theme for Jekyll</a></li><li><a href="https://mdswanson.com" target="_blank" rel="noopener">swanson.github.com</a>, blog, talks, book writeups</li></ul></li><li>Out of the box<ul><li><a href="https://html5up.net/" target="_blank" rel="noopener">Html5 up</a></li></ul></li></ul><h2 id="peach-Material-for-blog"><a href="#peach-Material-for-blog" class="headerlink" title=":peach: Material for blog"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f351.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f351.png?v8">🍑</span> Material for blog</h2><ul><li><a href="https://unsplash.com/" target="_blank" rel="noopener">unsplash</a>, beautiful pictures with permitted by author</li><li><a href="https://giphy.com/search/miyazaki" target="_blank" rel="noopener">Gif material</a></li><li><a href="https://gist.github.com/rxaviers/7360908" target="_blank" rel="noopener">Complete list of github markdown emoji markup</a></li><li><a href="https://www.emojicopy.com" target="_blank" rel="noopener">Emoji copy</a></li><li><a href="https://fontawesome.com" target="_blank" rel="noopener">Font awesome</a></li></ul><h2 id="anchor-boat-ship-Bloggers-worth-to-visit"><a href="#anchor-boat-ship-Bloggers-worth-to-visit" class="headerlink" title=":anchor: :boat: :ship: Bloggers worth to visit"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/2693.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2693.png?v8">⚓</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/26f5.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/26f5.png?v8">⛵</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f6a2.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f6a2.png?v8">🚢</span> Bloggers worth to visit</h2><ul><li>Data scientist<ul><li><a href="http://jakevdp.github.io/blog/2017/12/18/simulating-chutes-and-ladders/" target="_blank" rel="noopener">Jake Vander plas</a></li><li><a href="https://twiecki.io/" target="_blank" rel="noopener">Thomas Wiecki</a></li></ul></li><li>Visualize algorithms<ul><li><a href="http://www.jezzamon.com/" target="_blank" rel="noopener">Jaz makes games and other fun things!</a></li><li><a href="https://github.com/chi-feng/mcmc-demo" target="_blank" rel="noopener">Chi Feng</a>, he creates the Markov-chain Monte Carlo Interactive Gallery.</li></ul></li><li>Data visualization<ul><li><a href="http://hao.199it.com/" target="_blank" rel="noopener">Entrance to big data</a><ul><li><a href="https://ourworldindata.org/#entries" target="_blank" rel="noopener">https://ourworldindata.org/#entries</a></li></ul></li><li><a href="http://mfviz.com" target="_blank" rel="noopener">Micheal Freeman</a></li><li><a href="https://www.bloomberg.com/graphics/2018-us-land-use/" target="_blank" rel="noopener">Bloomberg</a></li></ul></li><li>Machine Learning<ul><li><a href="https://mlcourse.ai" target="_blank" rel="noopener">mlcourse.ai</a></li><li><a href="http://ruder.io" target="_blank" rel="noopener">Sebastian Ruder</a></li><li><a href="https://paperswithcode.com/sota" target="_blank" rel="noopener">Paper with code</a></li><li><a href="https://www.luolc.com" target="_blank" rel="noopener">Liangchen Luo</a></li><li><a href="https://github.com/georgestein/ml-in-cosmology" target="_blank" rel="noopener">ML in cosmology</a></li><li><a href="https://victorzhou.com" target="_blank" rel="noopener">Victor Zhou</a>, blogs about web development, machine learning, programming, and more</li><li><a href="https://github.com/ritchieng" target="_blank" rel="noopener">Ritchie Ng</a><ul><li><a href="https://www.deeplearningwizard.com" target="_blank" rel="noopener">https://www.deeplearningwizard.com</a>, A bunch of Chinese pioneers in spreading knowledge.</li></ul></li><li><a href="http://colah.github.io" target="_blank" rel="noopener">Christopher Olah</a>, he wants to understand things clearly and explains them well </li><li><a href="https://github.com/dennybritz" target="_blank" rel="noopener">Denny Britz</a> High school dropout</li><li><a href="http://hzwer.com/" target="_blank" rel="noopener">http://hzwer.com</a>, a passionate young guy.</li><li><a href="https://huyenchip.com/list-100/" target="_blank" rel="noopener">Chip Huyen</a>, got a list 100, created <code>SOTAWHAT</code>.</li></ul></li><li>Junior web developer<ul><li><a href="http://timmurphy.org" target="_blank" rel="noopener">http://timmurphy.org</a>, a devoted person matained this website.</li><li><a href="https://github.com/gwang-cv" target="_blank" rel="noopener">Computer vision</a></li><li><a href="https://www.cyphar.com" target="_blank" rel="noopener">Aleksa Sarai</a>,  undergraduate student at The University of Sydney</li></ul></li><li>Senior software engineer<ul><li><a href="http://david-hu.com/" target="_blank" rel="noopener">david@khanacademy.org</a></li><li><a href="https://coolshell.cn/" target="_blank" rel="noopener">陈皓</a>, a preacher of faith.</li><li><a href="https://foofish.net/categories.html" target="_blank" rel="noopener">https://foofish.net/</a>, another real technician.</li><li><a href="http://masnun.com/" target="_blank" rel="noopener">Abu Ashraf Masnun</a></li><li><a href="http://carltonf.github.io/" target="_blank" rel="noopener">Carl Xiong</a></li><li><a href="https://mdswanson.com/" target="_blank" rel="noopener">Matt Swanson</a></li><li><a href="https://devhints.io" target="_blank" rel="noopener">Rico Sta. Cruz</a>, He makes some exquisite cheatsheet of some evergreen technology.</li></ul></li><li><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f332.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f332.png?v8">🌲</span> Cool Professors and computer scientist<ul><li><a href="https://joearms.github.io/#2019-01-08%20My%20Eureka%20Moment%20with%20the%20TiddlyWiki" target="_blank" rel="noopener">Joe Armstrong</a>, farther of Erlang.</li><li><a href="http://math.mit.edu/~stevenj/" target="_blank" rel="noopener">Steven G. Johnson</a>, A heavy user of Julia.</li><li><a href="https://github.com/zbeekman" target="_blank" rel="noopener">IZAAK BEEKMAN</a></li><li>Shun Yan Cheung<ul><li><a href="http://www.mathcs.emory.edu/~cheung/Courses/561/Syllabus/syl.html#CURRENT" target="_blank" rel="noopener">CS561: Software Systems (for Numerical Analysis)</a>, the author explains the most fundamental concepts in C/C++ and Fortran clearly. Combine this course with <a href="http://gen.lib.rus.ec/search.php?req=+%E7%A0%81%E5%86%9C%E7%BF%BB%E8%BA%AB&lg_topic=libgen&open=0&view=simple&res=25&phrase=1&column=def" target="_blank" rel="noopener">the book 码农翻身</a>(if failed, try this <a href="https://juejin.im/entry/589944421b69e600599fec8e" target="_blank" rel="noopener">link</a>.) and <em>Modern Operating System</em> by Andrew S. Tanenbaum.</li><li><a href="http://www.mathcs.emory.edu/~cheung/Courses/558a/Syllabus/syl.html#CURRENT" target="_blank" rel="noopener">CS584: Real-time Multimedia Network Communication</a></li><li><a href="http://www.mathcs.emory.edu/~cheung/Courses/455/Syllabus/syl.html#CURRENT" target="_blank" rel="noopener">CS455: Introduction to Computer Networks</a></li><li><a href="http://www.mathcs.emory.edu/~cheung/Courses/377/Syllabus/syl.html#CURRENT" target="_blank" rel="noopener">CS377: Database Systems</a></li></ul></li></ul></li></ul><h2 id="flashlight-Physics"><a href="#flashlight-Physics" class="headerlink" title=":flashlight: Physics"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f526.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f526.png?v8">🔦</span> Physics</h2><ul><li>Website<ul><li><a href="http://ned.ipac.caltech.edu/level5/" target="_blank" rel="noopener">A Knowledge-base for Extragalactic Astronomy and Cosmology</a></li></ul></li><li>Video<ul><li><a href="https://ocw.mit.edu/courses/physics/8-286-the-early-universe-fall-2013/video-lectures/" target="_blank" rel="noopener">Alan Guth on inflation</a></li><li><a href="https://www.youtube.com/channel/UCDv_88jN-Ka8NY0k9TeSjpw" target="_blank" rel="noopener">Florence HEP</a></li><li><a href="http://iactalks.iac.es/" target="_blank" rel="noopener">IAC Talks</a></li></ul></li><li>Senior Researcher<ul><li><a href="http://hoggresearch.blogspot.com/" target="_blank" rel="noopener">David Gogg</a>, a very strict and thrive researcher.</li><li><a href="http://phyw.people.ust.hk/" target="_blank" rel="noopener">Yi Wang</a></li><li><a href="http://www.people.fas.harvard.edu/~xiyin/Site/Home.html" target="_blank" rel="noopener">Xi Yin</a></li><li><a href="https://wwwmpa.mpa-garching.mpg.de/~komatsu/lectures--reviews.html" target="_blank" rel="noopener">Eiichiro Komatsu</a>, he studies the Cosmic Microwave Background radiation.</li><li><a href="https://github.com/jcorrado76" target="_blank" rel="noopener">Joseph Corrado</a>, does research in computational particle physics.</li><li><a href="https://dfm.io/posts/" target="_blank" rel="noopener">Dan Foreman-Mackey</a>, writing things about data analysis and stuff.</li><li><a href="https://github.com/andersdot" target="_blank" rel="noopener">Lauren Anderson</a>, does real data analysis work in astronomy.</li></ul></li><li>Junior Researcher<br>Learn how they carry out their work.<ul><li><a href="https://zzxianyu.com/" target="_blank" rel="noopener">ZHONG-ZHI XIANYU</a>, he made the answer collection to the texted book of quantum field theory authored by Peskin.</li><li><a href="https://www.misho-web.com/phys/feynlecture.html" target="_blank" rel="noopener">Sho Iwamoto</a></li><li><a href="https://bedell.space/#" target="_blank" rel="noopener">Megan Bedell</a>, an expert in high-precision optical spectroscopy of Sun-like stars.</li><li><a href="http://www.sc.eso.org/~cyang/index.html" target="_blank" rel="noopener">Chentao Yang</a>, an ESO fellow in Chile.</li><li><a href="http://jradavenport.github.io/" target="_blank" rel="noopener">James Davenport</a>, runs a  weekly ASTRO VLOG .</li></ul></li><li>Beginner<br>Track their choice to career.<ul><li><a href="https://knzhou.github.io/" target="_blank" rel="noopener">Kelvin Zhou</a>, serious notes and abundant experience.</li><li><a href="http://hzwer.com" target="_blank" rel="noopener">http://hzwer.com</a>, he is striving to set things straight.</li><li><a href="https://github.com/adamdempsey90" target="_blank" rel="noopener">Adam M. Dempsey</a>, author of <code>arxiv-checker</code>.</li><li><a href="http://staff.washington.edu/bmmorris/" target="_blank" rel="noopener">Brett M. Morris</a>, research interests sit at the intersection of characterizing exoplanets and their host stars.</li><li><a href="https://github.com/jwuphysics?tab=repositories" target="_blank" rel="noopener">John F. Wu</a>, using SDSS imaging to predict galaxy metallicity.</li><li><a href="http://astro.utoronto.ca/~campbell/research.html" target="_blank" rel="noopener">Jessica Combell</a>, she has a long CV.</li><li><a href="https://scholar.harvard.edu/yshi/biocv" target="_blank" rel="noopener">Lily Yichen Shi</a>, runs a youtube channel <code>graduatephysics</code>.</li><li><a href="https://github.com/iphysresearch" target="_blank" rel="noopener">iphysresearch</a>, a guy don’t have enough energy in Physics.</li><li><a href="https://github.com/emptymalei" target="_blank" rel="noopener">emptymalei</a> inspired me using sphinx. (<a href="http://openmetric.org/misc/the-life-you-want/" target="_blank" rel="noopener">http://openmetric.org/misc/the-life-you-want/</a> breutally true without hidding) He writes notes.</li><li><a href="https://shreyasb.com" target="_blank" rel="noopener">Shreyas Bapat</a>, he is developing <code>einsteinpy</code>, which I used to think would be my idea work.</li><li><a href="https://cschreib.github.io/assets/cv.pdf" target="_blank" rel="noopener">Corentin Schreiber</a>, highly qualified programmer in astronomy.</li></ul></li></ul><h2 id="strawberry-Statistics"><a href="#strawberry-Statistics" class="headerlink" title=":strawberry: Statistics"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f353.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f353.png?v8">🍓</span> Statistics</h2><ul><li><a href="https://people.richland.edu/james/lecture/m113/" target="_blank" rel="noopener">Introduction to Applied Statistics: Lecture Notes</a></li><li><a href="http://immersivemath.com" target="_blank" rel="noopener">Immersive linear algebra</a></li></ul><h2 id="dragon-Literature"><a href="#dragon-Literature" class="headerlink" title=":dragon: Literature"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f409.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f409.png?v8">🐉</span> Literature</h2><ul><li>New books recommending<ul><li><a href="https://lithub.com/" target="_blank" rel="noopener">Literature Hub</a>, A quick look at temporary literature.</li><li><a href="https://vk.com/bookstagram_eng" target="_blank" rel="noopener">VK</a>, a social application in Russia.</li><li><a href="https://www.gatesnotes.com/Books/Leonardo-da-Vinci" target="_blank" rel="noopener">Bill Gates</a></li></ul></li><li>Old book<ul><li><a href="http://www.gutenberg.org/" target="_blank" rel="noopener">gutenberg</a></li><li><a href="https://5kindle.com/" target="_blank" rel="noopener">子午书简</a></li></ul></li></ul><h2 id="jack-o-lantern-Just-for-fun"><a href="#jack-o-lantern-Just-for-fun" class="headerlink" title=":jack_o_lantern: Just for fun"></a><span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f383.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f383.png?v8">🎃</span> Just for fun</h2><ul><li>For intelligent amateur in theoretical astronomy<ul><li><a href="http://howfarawayisit.com/documents/" target="_blank" rel="noopener">How far away is it?</a></li></ul></li><li>Learning German<ul><li><a href="https://www.youtube.com/channel/UCxGP15x_DUE5CFRxb3ZvpfA" target="_blank" rel="noopener">Youtube course</a> I enjoyed.</li><li><a href="https://www.thegermanproject.com" target="_blank" rel="noopener">The german project</a>, help you remove the pronunciation barrier.</li></ul></li><li>English<ul><li><a href="https://www.powerthesaurus.org" target="_blank" rel="noopener">Pick out a proper word</a></li></ul></li></ul><h2 id="🏯🏰🗼🗽🗺-Follow-the-news"><a href="#🏯🏰🗼🗽🗺-Follow-the-news" class="headerlink" title="🏯🏰🗼🗽🗺 Follow the news"></a>🏯🏰🗼🗽🗺 Follow the news</h2><ul><li><a href="https://news.ycombinator.com/" target="_blank" rel="noopener">Hacker News</a>, updated news in technology and enterprise.</li><li><a href="https://www.buzzfeednews.com/" target="_blank" rel="noopener">BuzzFeed News</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/XNHc16JIlYKpa/giphy.gif&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;I have been busy recently and cannot find a spare time for preparing a decent blog post. Inspired by the awesome list posted on Github, better to tidy up things collected along the way.&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Bookmarks" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Bookmarks/"/>
    
    
      <category term="open source" scheme="https://complicatedphenomenon.gitlab.io/tags/open-source/"/>
    
  </entry>
  
  <entry>
    <title>Modern Fortraner</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/01/09/Modern-Fortraner/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/01/09/Modern-Fortraner/</id>
    <published>2019-01-09T08:57:22.000Z</published>
    <updated>2019-12-25T12:13:35.967Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/SfrRifQ63n5fi/giphy.gif" alt></p><p>The road for me toward modern fortran began with a moving letter, the impact on me is significant. Here I depict the way to stand on the shoulder of experts, that is using great libraries.</p><a id="more"></a><h1 id="Awesome-Fortran"><a href="#Awesome-Fortran" class="headerlink" title="Awesome Fortran"></a><a href="https://github.com/rabbiabram/awesome-fortran" target="_blank" rel="noopener">Awesome Fortran</a></h1><ul><li>First find the source code of the library.<ul><li>datetime-fortran</li><li><a href="https://wavebitscientific.github.io/functional-fortran/" target="_blank" rel="noopener">functional-fortran</a></li><li>BLAS</li><li>Lapack</li></ul></li><li>…</li></ul><h1 id="Installation-of-Fortran-library"><a href="#Installation-of-Fortran-library" class="headerlink" title="Installation of Fortran library"></a>Installation of Fortran library</h1><h2 id="Build-with-cmake"><a href="#Build-with-cmake" class="headerlink" title="Build with cmake"></a>Build with cmake</h2><p>Make is a system to generate make files based on the platform (i.e. CMake is cross platform) which you can then make using the generated makefiles.</p><h3 id="functional-fortran"><a href="#functional-fortran" class="headerlink" title="functional-fortran"></a><code>functional-fortran</code></h3><p>manual for <code>functional-fortran</code>, <a href="https://wavebitscientific.github.io/functional-fortran/" target="_blank" rel="noopener">https://wavebitscientific.github.io/functional-fortran/</a></p><h3 id="datetime-fortran"><a href="#datetime-fortran" class="headerlink" title="datetime-fortran"></a><code>datetime-fortran</code></h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wavebitscientific/datetime-fortran</span><br><span class="line"><span class="built_in">cd</span> datetime-fortran</span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">ctest</span><br></pre></td></tr></tbody></table></figure><p>The installation of a Fortran library simply consists to have <code>libxxx.a</code> and the companion <code>yyy.mod</code> files.<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/path/to/datetime-fort$ ls build/</span><br><span class="line">CMakeCache.txt       Makefile             cmake_install.cmake</span><br><span class="line">CMakeFiles/          Testing/             include/</span><br><span class="line">CTestTestfile.cmake  bin/                 lib/</span><br><span class="line"></span><br><span class="line">/path/to/datetime-fort$ ls build/include/</span><br><span class="line">datetime_module.mod  mod_clock.mod        mod_datetime.mod     mod_timedelta.mod</span><br><span class="line">datetime_tests.mod   mod_constants.mod    mod_strftime.mod</span><br><span class="line"></span><br><span class="line">/path/to/datetime-fort$ ls build/lib/</span><br><span class="line">libdatetime.a</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="Usage-of-library-datetime-library"><a href="#Usage-of-library-datetime-library" class="headerlink" title="Usage of library datetime-library"></a>Usage of library <code>datetime-library</code></h3><ul><li><p>A direct way</p><p><code>FoBiS.py build -ext_libs datetime --lib_dir /path/to/datetime-fortran/build/lib --include /path/to/datetime-fortran/build/include</code></p></li></ul><h2 id="Build-with-FoBiS-py"><a href="#Build-with-FoBiS-py" class="headerlink" title="Build with FoBiS.py"></a>Build with <code>FoBiS.py</code></h2><h3 id="Install-FoBiS-py-first"><a href="#Install-FoBiS-py-first" class="headerlink" title="Install FoBiS.py first"></a>Install <a href="https://github.com/szaghi/FoBiS.git" target="_blank" rel="noopener">FoBiS.py</a> first</h3><p>Fortran Building System for poor people.</p><blockquote><p> FoBiS.py is able to build almost automatically complex Fortran projects with cumbersome inter-modules dependency. This removes the necessity to write complex makefile.</p></blockquote><ul><li><p>Manual Installation</p><p>Since the network speed is poor, I installed it at the same time, the Python installer behaves far better than manual install.</p></li><li><p>PyPi Installation</p><ul><li><p><code>FoBiS.py</code> can be installed by means of <code>pip</code>.</p><p>Does it support <code>pip3</code>?</p><p>Yes, it does!<br>szaghi also kindly remind you that t you need root permissions if you are not using your <code>virtualenv</code> or you are trying to install FoBiS.py into your system space.</p><p>I use <code>sudo -H pip3 install FoBiS.py</code>, It went well.  </p></li></ul></li></ul><p>Since <code>FoBiS.py</code> is well tested under the environment of pytho2.7x, it safe to revert back to python2.7x<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(base) /szaghi/FoBiS$ pip uninstall FoBiS.py</span><br><span class="line">(py27) /szaghi/FoBiS/release/FoBiS-master$ python setup install</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="Use-FoBis-py-to-build-Fortran-library-BeFoR64"><a href="#Use-FoBis-py-to-build-Fortran-library-BeFoR64" class="headerlink" title="Use FoBis.py to build Fortran library BeFoR64"></a>Use FoBis.py to build Fortran library <code>BeFoR64</code></h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">(py27) /szaghi/BeFoR64$ mkdir -p src/third_party/PENF/lib</span><br><span class="line">(py27) /szaghi/BeFoR64$ <span class="built_in">cd</span> src/third_party/PENF/lib/</span><br><span class="line">(py27) /szaghi/BeFoR64/src/third_party/PENF/lib$ ln -s ~/Playground/GH/awesome_fortran/szaghi/PENF/src/lib/* .</span><br><span class="line">(py27) /szaghi/BeFoR64/src/third_party/PENF/lib$ <span class="built_in">cd</span> -</span><br><span class="line">/Users/wangmiao/Playground/GH/awesome_fortran/szaghi/BeFoR64</span><br><span class="line">(py27) /szaghi/BeFoR64$ FoBiS.py build</span><br><span class="line">Builder options</span><br><span class="line">  Directories</span><br><span class="line">    Building directory: <span class="string">"shared"</span></span><br><span class="line">    Compiled-objects .o   directory: <span class="string">"shared/obj"</span></span><br><span class="line">    Compiled-objects .mod directory: <span class="string">"shared/mod"</span></span><br><span class="line">  Compiler options</span><br><span class="line">    Vendor: <span class="string">"gnu"</span></span><br><span class="line">    Compiler <span class="built_in">command</span>: <span class="string">"gfortran"</span></span><br><span class="line">    Module directory switch: <span class="string">"-J"</span></span><br><span class="line">    Compiling flags: <span class="string">"-cpp -c -fPIC -frealloc-lhs -O2"</span></span><br><span class="line">    Linking flags: <span class="string">"-shared -O2"</span></span><br><span class="line">    Preprocessing flags: <span class="string">""</span></span><br><span class="line">    Coverage: False</span><br><span class="line">    Profile: False</span><br><span class="line">  Preprocessor used: None</span><br><span class="line">  Preprocessor output directory: None</span><br><span class="line">  Preprocessor extensions processed: []</span><br><span class="line"></span><br><span class="line">Building src/lib/befor64.F90</span><br><span class="line">Compiling src/third_party/PENF/lib/penf_global_parameters_variables.F90 serially</span><br><span class="line">Compiling src/third_party/PENF/lib/penf_b_size.F90 serially</span><br><span class="line">Compiling src/third_party/PENF/lib/penf_stringify.F90 serially</span><br><span class="line">Compiling src/third_party/PENF/lib/penf.F90 serially</span><br><span class="line">Compiling src/lib/befor64_pack_data_m.F90 serially</span><br><span class="line">Compiling src/lib/befor64.F90 serially</span><br><span class="line">Linking shared/libbase64.so</span><br><span class="line">Target src/lib/befor64.F90 has been successfully built</span><br></pre></td></tr></tbody></table></figure><h3 id="Use-FoBiS-py-to-build-StringIFor"><a href="#Use-FoBiS-py-to-build-StringIFor" class="headerlink" title="Use FoBiS.py to build StringIFor"></a>Use FoBiS.py to build <code>StringIFor</code></h3><ul><li>Prepare the requirements.</li><li><p><code>FoBiS.py build</code> to build all tests</p><ul><li><p>Build the library.</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># static-linked library by means of GNU gfortran</span></span><br><span class="line">FoBiS.py build -mode stringifor-static-gnu</span><br><span class="line"></span><br><span class="line"><span class="comment"># shared-linked library by means of GNU gfortran</span></span><br><span class="line">FoBiS.py build -mode stringifor-shared-gnu</span><br></pre></td></tr></tbody></table></figure><p>So you can link the library while compiling an application rather than copy the raw code to it.</p></li></ul></li></ul><h2 id="Use-FoBis-py-to-build-Fortran-library-forbear"><a href="#Use-FoBis-py-to-build-Fortran-library-forbear" class="headerlink" title="Use FoBis.py to build Fortran library forbear"></a>Use FoBis.py to build Fortran library <code>forbear</code></h2><p><code>forbear</code> is an awesome package is one that is mature (not recently released), is well<br>maintained, has a good amount of users, has good documentation, follows the best<br>practices, and which latest release is less than 1 year old.</p><ol><li><p>Checkout its dependency from subdirectory <code>forbear/src/third_party</code>, it depends on <code>Face</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:szaghi/FACE.git</span><br></pre></td></tr></tbody></table></figure></li><li><p>Checkout the requirements of <code>FACE</code> from  subdirectory <code>forbear/src/third_party</code>. It is independent of any library. Good!</p></li><li><p>Satisfy the installation requirement for <code>forbear</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> forbear/src/third_party/FACE/lib</span><br><span class="line">ln -s ~/Playground/GH/awesome_fortran/szaghi/FACE/src/lib/ .</span><br></pre></td></tr></tbody></table></figure></li><li><p>Install</p><p><code>FoBiS.py build</code></p><p>Error</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Attention: the file <span class="string">'src/lib/forbear_element_object.F90'</span> depends on <span class="string">'face'</span> that is unreachable</span><br></pre></td></tr></tbody></table></figure><p>In step 3, the right command should be</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s ~/Playground/GH/awesome_fortran/szaghi/FACE/src/lib/* .</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="Use-FoBiS-py-to-build-a-project-requring-external-library"><a href="#Use-FoBiS-py-to-build-a-project-requring-external-library" class="headerlink" title="Use FoBiS.py to build a project requring external library"></a>Use FoBiS.py to build a project requring external library</h2><p>An advanced way</p>  <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir src/third_party/xx/lib</span><br><span class="line"><span class="built_in">cd</span> src/third_party/xx/lib</span><br><span class="line">ln -s /path/to/xx/src/lib/* .</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line">FoBiS.py build</span><br></pre></td></tr></tbody></table></figure><h1 id="Using-external-libraries"><a href="#Using-external-libraries" class="headerlink" title="Using external libraries"></a>Using external libraries</h1><ul><li><a href="https://github.com/szaghi/FoBiS/wiki/Linking-external-libraries" target="_blank" rel="noopener">Linking external libraries</a></li><li><a href="https://users.humboldt.edu/finneyb/engr325/gfortrancompile.pdf" target="_blank" rel="noopener">Using gfortran with external libraries</a></li></ul><h1 id="Open-Coarrays"><a href="#Open-Coarrays" class="headerlink" title="Open Coarrays"></a><a href="https://github.com/sourceryinstitute/OpenCoarrays" target="_blank" rel="noopener">Open Coarrays</a></h1><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ cafrun -h</span><br><span class="line"></span><br><span class="line"> cafrun - Coarray Fortran executable launcher <span class="keyword">for</span> OpenCoarrays</span><br><span class="line"></span><br><span class="line"> Usage: cafrun [options] ...</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"> Example usage:</span><br><span class="line"></span><br><span class="line">   cafrun -np 2 foo foo_arg1 foo_arg2</span><br><span class="line">   cafrun -v</span><br><span class="line">   cafrun --<span class="built_in">help</span></span><br><span class="line">   cafrun --show</span><br><span class="line">   cafrun -s -np 4 my_exe</span><br><span class="line">   cafrun -np 4 --reenable-auto-cleanup ./my_exe arg1 arg2</span><br><span class="line"></span><br><span class="line"> Notes:</span><br><span class="line">   [options] must be a CAF executable file, one of the above arguments,</span><br><span class="line">   or an argument to the program name returned by caf --wraps</span><br><span class="line"></span><br><span class="line">$ cafrun --show <span class="comment"># Show the command that the wrapper will execute. You can pass this as the first argument and then the additional arguments that you're planning to pass to perform a dry run.</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/mpiexec -n <number_of_images> /path/to/coarray_Fortran_program [arg4 [arg5 [...]]]</span><br></pre></td></tr></tbody></table></figure><p><code>caf - Fortran compiler wrapper for OpenCoarrays</code><br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ caf --show <span class="comment">#  Show how this wrapper will call the compiler and exit (dry run)</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/gfortran -I/usr/<span class="built_in">local</span>/Cellar/opencoarrays/2.3.1/include/OpenCoarrays-2.3.1_GNU-8.2.0 -fcoarray=lib -Wl,-flat_namespace -Wl,-commons,use_dylibs -L/usr/<span class="built_in">local</span>/Cellar/libevent/2.1.8/lib -L/usr/<span class="built_in">local</span>/Cellar/open-mpi/3.1.2/lib <span class="variable">${@}</span> /usr/<span class="built_in">local</span>/Cellar/opencoarrays/2.3.1/lib/libcaf_mpi.a /usr/<span class="built_in">local</span>/lib/libmpi_usempif08.dylib /usr/<span class="built_in">local</span>/lib/libmpi_usempi_ignore_tkr.dylib /usr/<span class="built_in">local</span>/lib/libmpi_mpifh.dylib /usr/<span class="built_in">local</span>/lib/libmpi.dylib</span><br><span class="line">$ cafrun -np 2 ./a.out</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="programming-paradigm"><a href="#programming-paradigm" class="headerlink" title="programming paradigm"></a>programming paradigm</h1><p>While not designed as a purely functional programming language,<br>modern Fortran goes a long way by letting the programmer<br>use <code>pure</code> functions to encourage good functional discipline,<br>express code in mathematical form, and minimize bug-prone mutable state.<br>This library provides a set of commonly used tools in functional<br>programming, with the purpose to help Fortran programmers<br>be less imperative and more functional.</p><p><a href="https://en.wikipedia.org/wiki/Imperative_programming" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Imperative_programming</a></p><p>In computer science, imperative programming is a programming paradigm that uses statements that change a program’s state. </p><p>The focus of procedural programming is to break down a programming task into a collection of variables, data structures, and subroutines, whereas in object-oriented programming it is to break down a programming task into objects that expose behavior (methods) and data (members or attributes) using interfaces. </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Fortran is less popular to mankind, but is very welcomed in scientific computing. Fortran is evolving with time to live up to good features in programming, so I am found of it and belive in its future.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Fortran" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Fortran/"/>
    
    
      <category term="Fortran" scheme="https://complicatedphenomenon.gitlab.io/tags/Fortran/"/>
    
  </entry>
  
  <entry>
    <title>High Performance Computing</title>
    <link href="https://complicatedphenomenon.gitlab.io/2019/01/03/High-Performance-Computing/"/>
    <id>https://complicatedphenomenon.gitlab.io/2019/01/03/High-Performance-Computing/</id>
    <published>2019-01-03T12:36:04.000Z</published>
    <updated>2019-12-24T14:24:10.814Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/zQwzH2fmcYljO/giphy.gif" style="width: 60%; height: 60%" ​></p><p><code>coarray</code> is made with alternative parallel technologies - <code>OpenMP</code>, <code>MPI</code> and Fortran 2008 intrinsic <code>DO CONCURRENT</code>.</p><h1 id="Message-Passing-Interface"><a href="#Message-Passing-Interface" class="headerlink" title="Message Passing Interface"></a>Message Passing Interface</h1><p>As a new hand who knows little about the cutting-edge technology and its developing history, then when you are about to get an overview about what it is about, please unlock it in the right way.<br><a id="more"></a><br>So far, I can write mediate low level language and am not acquired to do parallel programming, I just do it for fun. Further more, the ELMAG software involves this technology, so I’d better to understand how it works.</p><p>Think about a scenario, At the very beginning, a single process which we thought is comparably simple occupies a processor, and others jobs can not start until the previous job is done. what if a large complex job can be divided into several small jobs, then execute them by multi-processors simultaneously.</p><p>Shorten the computing time. Imagine that you can speed up your computing time, you can get the job done hundreds or even more times quicker than before, wouldn’t it be nice,</p><ul><li>You take very little time to complete a fairly job.</li><li>Much more computation resource consuming job can be done in a fairly acceptable time interval.</li></ul><h2 id="Hadoop-and-MPI"><a href="#Hadoop-and-MPI" class="headerlink" title="Hadoop and MPI"></a><a href="https://blog.csdn.net/zhuliting/article/details/6824829" target="_blank" rel="noopener">Hadoop and MPI</a></h2><p>If you care only efficiency, then don’t come near Hadoop.</p><p>Only when you consider further requirement, like fault tolerance, you need to move forward to Hadoop.</p><ul><li><a href="https://stackoverflow.com/questions/5386630/fault-tolerance-in-mpich-openmpi" target="_blank" rel="noopener">Fault tolerance in MPICH and OpenMPI </a></li></ul><h2 id="MPI-tutorial"><a href="#MPI-tutorial" class="headerlink" title="MPI tutorial"></a><a href="http://mpitutorial.com/tutorials/" target="_blank" rel="noopener">MPI tutorial</a></h2><h1 id="MPI-in-Fortran"><a href="#MPI-in-Fortran" class="headerlink" title="MPI in Fortran"></a>MPI in Fortran</h1><h1 id="coarray-in-Fortran-2018"><a href="#coarray-in-Fortran-2018" class="headerlink" title="coarray in Fortran 2018"></a><code>coarray</code> in Fortran 2018</h1><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ brew install opencoarrays</span><br><span class="line">==> Installing dependencies <span class="keyword">for</span> opencoarrays: libevent and open-mpi</span><br><span class="line">==> Installing opencoarrays dependency: libevent</span><br><span class="line">==> Downloading https://homebrew.bintray.com/bottles/libevent-2.1.8.mojave.bottle.tar.gz</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==> Pouring libevent-2.1.8.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/libevent/2.1.8: 846 files, 2.2MB</span><br><span class="line">==> Installing opencoarrays dependency: open-mpi</span><br><span class="line">==> Downloading https://homebrew.bintray.com/bottles/open-mpi-4.0.0.mojave.bottle.tar.gz</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==> Pouring open-mpi-4.0.0.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/open-mpi/4.0.0: 753 files, 10.7MB</span><br><span class="line">==> Installing opencoarrays</span><br><span class="line">==> Downloading https://homebrew.bintray.com/bottles/opencoarrays-2.3.1_1.mojave.bottle.ta</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==> Pouring opencoarrays-2.3.1_1.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/opencoarrays/2.3.1_1: 20 files, 267.9KB</span><br></pre></td></tr></tbody></table></figure><h2 id="coarray"><a href="#coarray" class="headerlink" title="coarray"></a><code>coarray</code></h2><h3 id="background"><a href="#background" class="headerlink" title="background"></a>background</h3><ul><li><p><a href="https://coarrays.sourceforge.io/doc.html#1.%20Coarray%20images" target="_blank" rel="noopener">Parallel programming with Fortran 2008 and 2018 coarrays</a></p><p>  Any ordinary variable can be made into a coarray - scalars, arrays, intrinsic or derived data types, pointers, allocatables - are all allowed. </p></li><li><p><a href="https://en.wikipedia.org/wiki/Coarray_Fortran" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Coarray_Fortran</a></p><p>  A CAF program is interpreted as if it were replicated a number of times and all copies were executed asynchronously. </p><h3 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h3><p>Leibniz series</p></li></ul><script type="math/tex; mode=display">\pi = 4 \sum _ { n = 1 } ^ { \infty } \frac { ( - 1 ) ^ { n - 1 } } { 2 n - 1 }</script><p>We can divide the work to several parts and add them together at last.</p><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul><li><a href="https://computing.llnl.gov/tutorials/mpi/" target="_blank" rel="noopener">Message Passing Interface (MPI)</a> by Lawrence Livermore National Laboratory.</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Now our demands becomes much more higher, if running a program takes enormous time, it is unacceptable.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Parallel Programming" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Parallel-Programming/"/>
    
    
      <category term="HPC" scheme="https://complicatedphenomenon.gitlab.io/tags/HPC/"/>
    
  </entry>
  
  <entry>
    <title>Get over GFW</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/12/25/VPS/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/12/25/VPS/</id>
    <published>2018-12-25T07:53:54.000Z</published>
    <updated>2019-11-12T14:02:52.030Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="be048ab1cf2adf480f8c4c46ed8c06b8181c83838416e452f1c901c6c66d9b2e">823e3eb07f236dd7f8bed615c6ad5bf5711eab1c65110a20e5786cd0a772a40178d0d6f94e0e08c4b1a7616fd418ee2a92ae12b4510e4ee68f13559e7fce9d2e0ec9d30d7fef6e961d3d28ced6b27bddf0ebdf3e3fd0d75c317de547a6c52bd461e55737e3f7b410305af8114d0cf60fbed6937e0ce36ecabfb6c9a41c85b6ca279350db9ecebe724794c2586a53e2241407ddf51d389649baa8a361656110c9c532993dccd83b8c2d65faa3859aad8c9d7845cd7d0bb778450096016970e3022e179076b1cab0a15ce6d283ea22c6879c1d5f13a7a68c1499e0cfeac1d5a94666ed4c8ddbdba8aa38f6df13834671e97d193a0bbf2185302212d8e4731fc002a838728ace26dff6006703069e5ad333b599ee892350133a66984165a5be54a010084d3921b5643e3742943e070fc8656960c54a40dd0eff3252699b998c6ade1cb2f8d4ece9279a6f802463574d2c6664295f8e435ffa833270552ce40a02d47c83706de94e6e9300a6497e8f3f2d833291f900830867aefa550c810f39f9eda9f148a722d32ed45fe53e783ff014fe79fa23501509a32eec54806ac53690ead5aa3f20e2bcc6b4ff15b945c96c7d234bb39cbabfa13ab87b7db963254760951b979ae55f5c45dd4b8283e2376e69e919ce1a25b6af9c58ff24a0d7336ce8765f474c09a3fe436403191716810c9e64e8eba6e43a3064b646d59844f110d38b998fde932487dd4c64680748665510336c4668b395bd90b969c2c934cfa926897827a40f6bbc7b2a2a383bce094e166576385636b52baac7b36f27d2126d6ae87324b301613d8b2810c03699ec7a99dc6219e4d37a6900a867e686cf23f53ccf112bf975aa301693ade31c8d075d7862b10125262ae849a7dbc61b483b4813914bd0479f2a355d018cfea686a6dd18ac37207b902c3f953cf8cd47f5cf64ee3126676164e4f6c1b2d1dae0655b4aa3295069a362d543bc48463e2452ac81d755d0f62fafe2a9ece6ea0ff3ed79b6600e21aecd17de0abba1e80f641426606c15704c4e3a9eb63069f54a96fce478ec16f2345c3ec66f056566b7db05868b787f6f49e67bf1ef9e0fc6e6ff23ce8a132c7b197909e23886a32703ef82cf15c8f50ef9d167a29354a1779b8f6b021ee7517eaaceb659af819ee9deee7761e4e37ffcaf30be147aa1fa46f2343a716e5fdcc7fce3c66bd66609a9ba5801d0f2d5b5df84a9e95fb48b98a36341601acd766d46d2eaa480ee51177bc39db4f23b50fa74717e5ae8ccf474229fd7253939a7a1fc3926076bc976453ba68210c7722c1c16e308bb2290a328439f4a026278ef1a1720d362e361eb2cd509567e274d729efafb5d3689980d532862e97317d36953542db9b4f74fc51c110d10d321c7d21e12b02ec14229f0c86b6444cac7a87490e306f5ba403da254ae1879958503395056df1347106270f6435403fe516205cfe93ae408ec04b3baba153e5970136895c6957a79da3963a0c15b6de171718e3687b98e0976ba62b3d1824edb04324e2ef4c57d5e251611f4a27de40c74957180572de63d520ceef5dfe657d9fa374b99827e8fa4cd04d0db5b3082e6199fa7061043d85e9dbd2d5091eec2e85eeffc619feeb5a2b0088f2c1ab00a3bc47c0a22fa85c731b9eb6ecf7d144f0d5649b46b722c9f127dd1465742ee11c4ecac3b68661169901665869bced78df927de6386607f26fceb25e95b604bc358285567e1712c4285d300e3cf645a01be269c8f964aa4a6a60347e6f44328af9bc0154db7887283286402ba468380b83606e7f5bc5c3539067b2b82de00a868b0c74508c2321034706c4d11418418ea925ddf39100ec1071c09a35329f7943d9ad73893aae7ead3a3121d4878b1f19bcf9fc6c26daed6047666d53757ef051a599a68a652cc8a5d06e5fdf80e9b7b8390bcfa5796a9c39bdc1e189a81f8c39cb9987228b5417091643c690e308968acd4fce6cb2001d6796abe4d0d44f9a8b7dd907613ba8dab8b9fb5f7f8a106e465bac570fdd6a2d91a0491a456c31f8dd93dfe4f69009c367c56a3e201f555ab9926db096374de2df2c0155ae82681640ed6c73377f9b3bd74f501415b29a8bdcab1dc3173a7efee0c393efaba97094e36aa4cba5d1c844fd796d4cd24337a338f7e5cb180d9699ec06a78e1c3f31918fd5ed150ffa979af631c8e0f948357d5ed91d4c471218cc0e7a3cb0672ec4109343ed5d9fba20fca4a74e7cda4c58d0bf949b0496db71bd114221affcb29dd1c88ddd23d6e5799b9e61666eaecb9a21f9480f8977f3ae28ca2ec2e42ccd275137bb87e3a4be9abad3e3ff24e4c293c35b56c90232feecc052e537f49e9ebdc123e5725c20d580209c069c3f0392d1384cf361994250f00be0836c39a0eb4e076d341f41b54808d30d14db4c870c930b1c145272c2ad3cb749f47d53d60624fd297a720accd01835a0dc75ce252eccfb89ebca95d70b1962c1ee6cc73e748d80e6c6b0db2d2876722e3864960609555fc86eb0642e0b4bd914711cbd5c947f9cd48b61530a3f54090b609539e28bb2a674511dac4b2348a8fd90bda4de67b41989b4dadf992e9219ec1122777084aa8b7a2ab864b61007bb5a614d6e5423e1180a2ce8330f6acbba526d79c8939192f53d8c01f200cbb40889895b80dba388f5d9d71f25629d4ed00b5aed3fe369bbc1b7aa18f96a3ae7157a8d578ff7bce4b8655caa236d8c294cb22ac0369943b56b929a21c2259eb5a293168dc7ec3330e65a8ead92e71d4d51594f09401269a0ec3bd4e86645abe37740516e50061f0d057f17a84766e865e3bbc0c80ee0778f5a3a197debd5fd1308197d5a06be10a75571e8318b1e551d01ae829f73c725bb0ea43f5042ca8d56321c601bc6aa5809a882f7a7afbcfda80eb987ca24185bd5d127c65b73ea3045f4297ee8a071bae0f3dbb2086d71a357fdb5056351e3f1826cec5a30cca4c07e327dfbf7aad8882ca38efa95ed2344883a48b3eb4d4692966aca20328a783284808ecf4856e095f2619cac1a2c4ebc7023114db460afd68b9d276c5acb9f38563dcd27800f98e83dc891db11211748f4a5ac6e32403854a9d7b18ae177119ce8fcd08b2e87a55fe44259e2d5973a71b6146f9d709e84eadb8e48f4016d35c45d8b10b3d89364bae1ba314544277bc1423258e697e3ea9f063b19a7f97dd1a50912983ec87afb2cd78f87750f1ab87bee12e30674bc612ed93faa5eacf6a9133c3f321f2efb53a40999585a0b16f065ac19322fcbe629c4c93b49a909a3126de2f347b57cc77c8372fa45b400be17f15a4a9b4b66f9e6146707a136b08c7d7acb78d916f56d848a1d7c2fc33ddd9e1b65475c6ecd894441dedcece6f1192afbe49cfdf302100eec3353dc129d3958ddd7217161b3c224618a234e799e3a4d4ec6fe0b17fb74432d85c44ce8c36991d3ff28d0cbb947f050bc1e49e1f1c6d98ab8b22419c58054b9eb03b10ceaaeff8186102fb10c60b07623481a03ad5983092df9450d715ef6c378c41cce80afe6d2016222cf64319f140577405d886b6492310a2c509d7247dece9d1e35738e3ec2076c114d55b600563b8139e63349aa62208c43171385ae70ae0d5c755fbd70906ce3612c8b67d5e9d4323b70521df025625305fb5c71113a9adcd40d2bf13aa410a34053702b5ae9e0ee648d5c7a7b0df55cd99d28b8de5d923eb83d5a6b9495eb8fcec518a5194dfe1372132174201e8e1e9e4ed4f1797aea94bcc3e93ab1e41eacc5d5e09eaa60048619f3cb26de3e25450923132745485a1ecbef67815d2c18ebf68e410a1fbd86b9e9e64fc7a8412a3eb79c9e78da768e0ff3d9107312e0e47778aef4846d425e39277d83d56d7920759bfa23a0d61a0277380e98a12a2c03b39a8b463c78152d8d91270b9de82ea72ecc445226f6c032a173c9360a0cc496b8fc918fbf049b6f8ff17fddb60543e81866d50c68ec065058bfa327e9a46027eb96f8bd9d91bca565320d8f758f4e3c82e02ecfaab96a6f42efb5ab263ebbd67659a55052313b74cdc0680f4d73162444a211c753018d686d57c9f72c6c7e69413849225cfcba2a7c94db662177a71a30b959442e8e65db0a0e932be97c5eceee99ae4a0398aceaef18b589a49ceded43c226aacc8bcb635db9b4e020bae770b004407500505288319903a870aa6ca23b3493b5b29bb7172a0e5b28dc90947021a701984532d6ecb8d1f82da81c969e191944fed545a9f4c6d4ff8980aa7a8aa819e063f997ac38a5cc7f9ca8fd4aa4ad03f471de70fb998f99a45e802841886d621959442108f0ada9c926e4a5762f741e62dd291da83fdf147d636fd536c6e54bf9ef722b47fdca54b7e2585661768157e9d8aa4acb24c46409da012311eb003ade2078b9f3595db0639811898e0ca5e9f133c2ec80bad72445aaf9f2842d51d3aa3df25a3f34f93563a5c7c4b6f64583f13856334338839d5e0da917d392abefec27922fcd9551cfa0401f508f185f463df3adc5caab9320b59a68387ee2cafd58c8b0e68a02992a86d67b1f9780e47453290585112e268b81823f7f1f20726d7c5a1832b4969a4deb4708c66bec80155f871eb497592516ad0202d3557435b415fbc49ec89167614fc55cfe8cb01ef3699b2949c081d206f5cdabd211b8e674281a85d0cd4e6bdde2b20d28aff4c3cf7903e82d8953042acdb929c5c9d9815020232314b0398f6176bb4f13eea30301d153831786d50d748a469704126ac2ae4e1932735c925276e34575d2ada2bde52469798fce397c5ea2a3fe8f012dfc1302d7f06cb7e03cb352987b5300579c9553966ddd753b7d13b1de424e0eb2937b064ef059b84b41aabbbc5166f73b69ae33c2aba5e3204f31c66f1a1795eb5634d33536a764d6fd0aede8793b3a2a196878735293680fcc7042f3107834201e9bbe71ee3dc97f998796116d21dfb179456aa8406439f822d9cad1f3bb4be74cd81bea21e7773f4092bf10efedb9fc6d8751d197fec67fc0c37a46d84ed73d0cf8f845f8785547ff2889a2ddeafe4fa10a0c817962b6d0ba37e048329839c1b890e85d50b447b6b88e82120a59025bbc6d79978a7dd667753c178f30ad2bca01958cdc50e3482889c8cdc7af0522bd9545c6f02d2bdd21840647d88ece08ff7358cf42c07542df26d947f58dbf60228c72187a2ad183c6fb76972a43271b3cbb86a948a4e1eaed8cbec7f406a5140383faa22fc44f627cf74525c518a638ee8705d8241f19fc201bf08d350e2d8191b382bf624dda8c63a70115191526a6dc707761561beb9ed7862a9546b497ba211ed4fc2ba6c31fc01d19ab41d46d4563dbd37fa97408eec130d956ac421d43ff57fba3a51ba9c704327176693fa90d8c03aed2d770c136a2754c82a4998256757a57e0539269bf00bf938cadd9da21848cab9cd292f6c32d3a534595978565f41967811aff2140f0bce73c81e80a1d88beca53ec0073739b8566e71acf39bbcded0c93e2066231a9a950447495dcc717f19bf83e303976a1623011140a701c5806dab87c27764333b4fe530e52a12713afc20a1fd5dc6e2bf0abb2ffffb315db77b90f4787464ab963f5751e8cff2ee3f2679ef298eb59bb0223e0713e7f9f43def7032c92039e0e962b3a5e06681ee479e98ed59c4c8a797efc506097dc82ce09326f3432af5c78ce536ddc5902321cca46176ed24f3ee866e860789a39b9defc2849404a97e2a13c839027ddd1b61e3467f8cd478dd0f657f2c9bc1449d8c1dc84e2c8fdcc5bfa6dae3f3fd6d1b0e54f83c847bd6661f5b2f6cc50663afe82ba54206d4db6a2fbb5709a5030c3ba35c7b82d223b23707541bbdf11c5df1c4b98b191c664e568349a5f7112b77625b1e1f08f4974f0b61679783ebd22eff0e8e80ba88f077cbab3062c4dc069675b4363f21e1f7b69163c5ded36f576b1f000a082bca910d34bb7638f0afd7180e94c29460466d79c3d5f131340ab8bad8fa037e7972436ecff6176d19850f9f7abedac7446ab4dc4994a12f485fbe92341d3a5f0215a8e1c2129c8e601e8050270207de7dcef7fb0f156b877b4f7dd745b4f7a5d3d71ded9b69d8fbe4783e5bd3d987a85a3b1bdf71fd3b9c2b194df3cdd53604b2c118f662b61b352bae7e154ed2b41f462d457647ee655e8c7b2b5a385ba109be575a6579dd91037e3a52bceac88459fcf2a84761ba2d365c2103b3a8cac71128328a7c27e8b7761a33a0c55c74feb0d8282b8a1f027fe263a110e9d6af0e6c5b1f5ddad071e77dd4aafa0d6376c36f8c82afccd678993aa6396dfc3bbdd20fede1380bc4ddb010364c6934d37c1932ad510b3eb4ab459464dfb2a45f8722fac8fbeb870bbf93c33e448d0a9f8e055fe8979a321ee5f9c62a493293bcc623cc041939c9e810a12ea0bb314fe2603c6bbb4fcf28bb71b44a9cc684d74ca0d327eb7e6a1b3f590df9e155957df89504adc7e743518c8cf3a9a18606739e86fbba11e589d7379791e2a237b32a94781a0c54f50c7ad12ce4bac68d3ee5ce44f0eff835b9353232c9239654df6f47287354c58b70fa903304e3796f586bb881414708b0da9c34d032b3c30ae488fcea8787b79399d082ded330c1b67cb0edce9e83666e3dfb52593c3621d5c38671fe4c43e233d2caacdcde67cc31785f662d3c55e7b9190a8150d8e236604aff38e1bd3f953c9044fa7357f95a3f6c300da12bd66e115a3d6979568b4f74cd67ed5cb3662d86d1e3c61593cf8215af5691dbd009bda984da197839ba5b7d793a5903742330ee9416b01d4b0c67b1ac2f9c8673a62e08829531e4b1430e33ef98da2ff9b7463033e7c2932be28db77068d2b5052291d2a4cc3374b16b5e5da030d5c4e301b9bad9dc80149b325997ac4059a16420645482d386eb0c5fae300063575f0f762211bc5f92932386de6d9374474efd82a5b625ade694194db613f4ab8506c2510f5156612af156e26f684793c2656e9ac906ca7ea48d7d1136b72d669da720c180165b094dedb207673a4d7c36e9fa8a6542e17b406c2e889bb9c615d5f0fed5b4bb31bb3627c884f3cb058c7b732641d3a0b51b43e20fb470f88531b4bdcb2a5c7a7982a66d081d2a818a640c7b8713b620dadcfe7aab14f27993ce844a6be21092ad59800cf643355ee2529b7ab19ff0212ae9a547507a7416d7d926bf402ae9f5a4e8b8371e4eb4bdce9e7cdcbebb3c927b0c4ba4b73e0c74cf085bdff375d2258ab98779507548653b511582f135692e3171b0a8c50712f9a719a13bf1111b9134fba8b2f2225d1e9f611b3c9c5e6d2fa51f54448ee999161e41e2b698d1b7f100d58e0a9db76f740e1c62ebcd469cfe446674e4731ffc16638cd41d1cc9b55e9ca160cb88437df684ff31b7f33e9889e11f225d2b983e82699e04c2e98efa4eb9a37b707b08231dc25aa7b32979fea55687719832676e03321896f04883992943fcbc6e9c0732368a03ae799adcc082d951d736e2d817f52d708e8d4d5f498fae378fd6ed35bd59e3f137f005eb4007fd88e521fc146f61c15a4285a1a5bba5e2ea653c6062d384113e7d60a0842f443f8a54a117e418124963b7ae56036028ddebbc692d148769055db02a7ef3ed137cd2df9ec0d02c4e5914510461ab193d251fedf7903c5a2f7f605da13b5efd425b92fea27113491c87bd700010d60831c6c160c64c356fbd29bbc72845677457d75d612c1ad69355ecc2091bb2dfc370e337cab86180b5ddeafbbaa1e054eab182b4354c33ecf7c47856d5c24db6dfc6a84b70ab610a4e8ccdfd250b9d2fb7c38eab7fe0f7c787b83b8380e2e41eb9e14fedeeaad7ad12e19403062da16085927ed2e32100362dad9678e20f796ff8f7e9b602d4adb1576c71480a8f4a5ccac7a489d27ebcbd6d023a2ca4778fb391385b4e8076f98a0b30c5cf9abcd14976916b19a482728907b9fed1c9634d83fa719964ccd2afac1ec98048273f0900526b1119ab71d1aa353d7a4d008ca25a623f2ca3b12f2b3a20645d69d71ac34da2a38f9f9905b18c92b47ef1c4002fa8658d4e161b0347c1253f3df33422833548622588f4c44d4b5f846a13d52ae322b91426883eab5b2bb2315470853783ac854e8997e4738644cfd607f865d285173500cb24ac571d87f05bfdefeff81c0974a22d152d71d16dffdf04cd1f788c6e34227d89458f7968ac0a851c92fc113e56d3091ba1492f02653c3046fb0ef13cef7a1d4432e0d0df0e9d550a8acf966ae2b64548028bc0afaac20e6f475432a80f08a3a8a4ad7601bf2f4fa42e249bc6da9fe53279492706e72e8c243955542812c12fdb23080ca54d12aea7df2e76391d85aabcff8ab8ae05aeee7ce4cda5f803f6b3fc7127bf060a273d952c38796525481f96d3b999d368b4b5d98a72fdbace1416f2c72ef76c4b76ad62081c4a5cf1859c17659f8fd048257299bb9d90522ebba90c10ddcdc7982b04e6f6af28023720ed1fd874ad0f008d75b6e31501a8e562c77e0b72f04d0278f4f51a62f0bc0d8af4b8f8d30f275ad3a96216dd27fcf42d26f3c160a6742fdea0cb475f87c5a612a2201a76aa705810c3af1e98fd16dcadc0d324718dc8420e925bd23e6a622c1dbd0ebd30ea77292486e9e88c176baac4bae8fd133dfefa8fd99da170eb2eaef1093dff2bed882202e234037b92f90a621232638fad83ba7c339f62aa322bec19e768102bb22bfadc90c364b732b557385bc210744291539a1551cd5658d1ce285c6b41032946c00a589f6f6e1d83c35bc797159a5f5137859c2b476cd9c6a5f924fec021ba9fb1b122f116e4ef5c300165bf20a1864dcc5351959429db5392fe385f907af8bfd2c399eacc2e350f5cee85e61b71e09883283dd28d7cd296bfc27c5e94b7e4443c7abce9edb9c35bc660f54fa8612746af15b07b63224643ad7e37d454f7b0718a192bb2f96d95a3cbeb1ae3d5370998ba953a29e8d01429f057ab6006a114f98e7a406bce8fad827df61c1e4d0b51968605b77492b8e49401d7739ae96f367921efac563cff5e8e9538c9144459f746de179187444ce90705233d7791b5b40829ffee0b9c19e8820624cdd657b9b0cad2d0ee7719726193274a831aa7150ead48af7c1f1b083f8decb62cebe1ff5fbf54b370e1e39f734e272ae0569f20e233b03d710b644f56f3a0bfbe100c46e381ddae2568f5436334e09b5537a6fdf9933206300d353395b09f93db0b2ce929df580ece58cf209258c43bc0eb7f3416a33fa02ecb84fea550dcc9db35db34715c145759a07920cbf4017812845174855e38c435fea08d4ac7eb46659b70fc361d9a972968161b656204f5c3a6e56d2c86d43d8b27d174a38f565029107ac6983b2294c726eb29022226397d9fdd46a6dbbf93f3d7c17a5886ca623ebe79632cbfe494bc1c37dc7f52a32a40e51ba560d02c20bdf62cb14f2575d55f24f59e02dd9717579fc5177ae7866a9a14aa562fa2c899ec8565127f4ddf999b3c7584ccab3e47de12206e5417af9200f0ed35d976dd4067e78b552f8c59c1b9668c0f8dfc7a898b437838fb633b600635c99fd9cea851267ab6e50429e7bc706a1ccb67b2c08eb83005d4014ea83b6f3a236574058248122b2cd32f251f7ee06c880fae057a91aa1b8bf0259bd079db3ed0cebd5dd0fc1231ab9219c34bd1fcbd817302ccbcaf280f450d6e807bbaac4776ff005e99feea9d2bb9e39f6627c92a6cff22c03171b619bbc326b2f44dc75aa57a95745cf4f6eff1d6f235f9f0d11c92c7ef220bebcd0a24d8f46fb2f65f4709a70477ea68d2abf7ea085b280cc2c38d71eb663440c78f5927aa918101b230c89e842c4a5050fc38ed9f05c8d745e7247e4b613ef2ef6f1508f03df3c6090d29d83cdf655486c0d6c0cffff4287d8ea97e52b0f332652d5abd3554f59ef77790f042ae9b38284306d995ec2876bd6086899d828e07df8454b015a5b05cec6aa31d439ad283a9be5c0c3252d96e7887955b409bd5395c9fe2c263fbd708ff5f94c3778f6b52b8c03cdbed5e05c010d597899c1485480501e0bb008412db00f974c0d046ff7d7f9ac2d23a6a665b78b6f021417ea75a33beb217df1a48b774c48468ee600644f6a8691f5b59830fea7bfdcb3dea6ee01676ce6b1324eb2c331eb96f2e09ac6cb545f6a425a8334b0d05da15896b134a87b57a93af9674d7bf3079c37a779a547e570419e4b0085c7ada7f5fb8195cca58c12a3e776480e9c5842ed9982cebb10837e5f42a9fb46f348d1b141766ece8e08ba82caf5d9674681e9be32153568491829249c5a69e85ad01283d2b8add86d172716f3038e404b254a9703bb01ee70e96fbd8696f2aa327f7107ef766fb994cf9ef3e5ace4900db180ec8b51f69e3aa0ea14d159ebe9767dad8788f8f5211138028ac2c2d24ed480304e7e4cb3308c7266001a235c6653c1e0c6d36fec0f85b9c3ad39f47242a188e70c6933412e38bc60a9d53e8de3570860b8e8ba287f429b23db06073c151f7c0518a20e03b7129a825a084bd3e522c16fff1273d4cfca74b1661c5a5a677f079d39144271c612e6cf27b5a1c4aba322a3fe3a39b534f11d176951be4c3a34ce4d8410169a2ac075f0264ca3984d487e1aa6a767dbf9e16e4bff6676c5d0d7a615de860dd475179a74bd64f75199ea3a8696f79a65ab81f48225b301b77c1111e84a3ce4c423764c93ef7047fbf8e98aaba697bcc31bfeda79ed9beade6fd17c97cd0f6cf58d1b8e3698a5870550c59c8e96de1e0ea34930633fcb29c95c07c690fcfc7be718f01ce07e901982a9a00fc68460ce5656f93f19dd7342318bdac2b8fa772895947e6243f55d7619ebd1d28656022f2195c344dab04cc3f78ad713c6d98ea2e5cbc0525733d98689d6819282bc3e3a4e6f8017112ac6fa1bab150052e1c19b6202bb34f9f3c01cfb532b6377715af579caf284050cbe68bf3f2409e4bed10f00c30f975d45f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      If I could figure out the mechanism behind network, then it would make me feel good.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="VPS" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/VPS/"/>
    
    
      <category term="VPS" scheme="https://complicatedphenomenon.gitlab.io/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Fake web search engine, weknow.ac</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/12/25/malware/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/12/25/malware/</id>
    <published>2018-12-25T07:41:47.000Z</published>
    <updated>2019-11-24T14:52:21.328Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/p5OmeXwcBHpf2/giphy.gif" alt><br>I am annoyed that this vicious program get itself installed and made itself as default search engine for Chrome, moreover, leaving me no way of changing the setup, it definitely a malware, It took me nearly 3 hours to uninstall it and made me experience a lot.<br><a id="more"></a></p><h2 id="An-anti-virus-software-that-clean-up-the-suspicious-files"><a href="#An-anti-virus-software-that-clean-up-the-suspicious-files" class="headerlink" title="An anti-virus software that clean up the suspicious files"></a>An anti-virus software that clean up the suspicious files</h2><p>That sound good huh? Not really. It did find out the problem, however, it just gives you a hint after scanning up, which helps little.</p><p><img src="/uploads/weknow_detected.png" alt></p><p>Now, you have 3 choices.</p><ul><li><p>Know the defects but do nothing with it.</p><p>It is unacceptable because I am obsessed with removing defects even it doesn’t matter, I think unnecessary stuff must removed.</p></li><li><p>Become a premium user by buying license.</p><p>It is frustrating because the license cost a plenty of money. I know paying for the professional to take care of certain things is fair, however, even if I am rich, I won’t let money handle the difficulty as things become boring. It’s a pain for me, but I will get it done.</p></li><li><p>The third way is a method can’t push into instantly.</p><blockquote><p>Your free trial request has been added to the queue. It takes 36 to 48 hours to receive your 3-day limited functionality free trial key.</p></blockquote><p>It’s also unacceptable. I can’t bear the risks when I’m aware of it and it must be removed instantly.(really? what were you doing when you downloaded the unreliable application.)</p></li></ul><h2 id="Problem-solved-in-a-comfortable-way"><a href="#Problem-solved-in-a-comfortable-way" class="headerlink" title="Problem solved in a comfortable way"></a>Problem solved in a comfortable way</h2><p>The headache is I don’t know at what extent did my computer affected? Did <code>safari</code> and <code>Chrome</code> both affected, if I’m unable to modify in an obvious way, what about a hacker way? Is there any vicious configuration hidden from I can notice.</p><p>Run the bash scripts below.<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.google.Chrome HomePageIsNewTabPage -bool <span class="literal">false</span></span><br><span class="line">$ defaults write com.google.Chrome HomeTabPageLocation -string <span class="string">"https://www.google.com"</span></span><br><span class="line">$ defaults write com.google.Chrome HomePageLocation -string <span class="string">"https://www.google.com"</span></span><br><span class="line">$ defaults delete com.google.Chrome DefaultSearchProviderSearchURL</span><br><span class="line">$ defaults delete com.google.Chrome DefaultSearchProviderNewTabURL</span><br><span class="line">$ defaults delete com.google.Chrome DefaultSearchProviderName</span><br></pre></td></tr></tbody></table></figure><p></p><p>It turns out the suggested way works since the malware didn’t detected any longer by <code>Combo Cleaner</code></p><iframe width="560" height="315" src="https://www.youtube.com/embed/k5bBO58vflo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="Don’t-be-affected-again"><a href="#Don’t-be-affected-again" class="headerlink" title="Don’t be affected again"></a>Don’t be affected again</h2><p>Recalling the operations I have performed, most very likely is I shouldn’t have downloaded the nearly anonymous software. The reason for this trouble is I want to download the Google paid  books for free.</p><p>Anyway, I find <a href="http://gen.lib.rus.ec/" target="_blank" rel="noopener">Library Genesis</a> at last, it is great.</p><p>Amend:</p><p>Such a great library. If Aaron was still in this world, he would be thrilled to see such a good place too.</p><p>Whoever is behind the operation of this website is respectable.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/p5OmeXwcBHpf2/giphy.gif&quot; alt&gt;&lt;br&gt;I am annoyed that this vicious program get itself installed and made itself as default search engine for Chrome, moreover, leaving me no way of changing the setup, it definitely a malware, It took me nearly 3 hours to uninstall it and made me experience a lot.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Malware" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Malware/"/>
    
    
      <category term="malware" scheme="https://complicatedphenomenon.gitlab.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>Open Source Spirit</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/12/16/Open-Source-Spirit/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/12/16/Open-Source-Spirit/</id>
    <published>2018-12-16T12:38:47.000Z</published>
    <updated>2019-11-12T14:02:52.030Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/gJbe5ndb0Qexa/giphy.gif" alt></p><h1 id="Benefit-from-source-code-of-project"><a href="#Benefit-from-source-code-of-project" class="headerlink" title="Benefit from source code of project"></a>Benefit from source code of project</h1><ul><li><p>It can draw attention from talented people and make it far beyond its initial capability.</p><p>Many great products made significant success than anyone could have ever imagined before.</p></li><li><p>They can open your mind and increase skills in an obvious degree and a profound way.</p><p>There are some people striving on spread the impact of the great programs of history<sup><a href="#fn_1" id="reffn_1">1</a></sup>, maximize people are explode to the very best guidance.</p></li><li><p>You can take part of contributing.</p><p>It’s a progress in civilization to have a chance to be part of the great projects.</p></li></ul><a id="more"></a><h1 id="Start-by-a-specify-free-linux-distribution"><a href="#Start-by-a-specify-free-linux-distribution" class="headerlink" title="Start by a specify free linux distribution"></a>Start by a specify free linux distribution</h1><p>Below are some Linux distribution examples, they are  maintained by different organizations and community, they get customized for different needs (<a href="https://en.wikipedia.org/wiki/Linux_distribution" target="_blank" rel="noopener">detail</a>).</p><p><img src="/uploads/opensourcecompany.svg" alt></p><p>Download the raw code from <a href="/uploads/opensourcecompany.dot">here</a>.</p><p>Why there are so many Linux distributions?</p><blockquote><p>每个发行版都有自己的特点，没有必要专门去照顾特定的用户群体，你所认为的优秀不是所有人都会认同。Ubuntu 的一些缺点可能会让某些用户群体无法容忍，开箱即用、本地化这些并不是什么时候都是第一位的。</p></blockquote><h1 id="When-shall-I-make-contribution-to-the-open-source-community"><a href="#When-shall-I-make-contribution-to-the-open-source-community" class="headerlink" title="When shall I make contribution to the open source community?"></a>When shall I make contribution to the open source community?</h1><p>I would like to join in openSUSE as an intern, the HR keeps asking me how I made contribution to the open source community, I’m not ready give a good answer to this unexpected question. I used to think that</p><ul><li>I can join in a community on GitHub doing the middle level difficulty thing, but I don’t due to I have limited thing.</li><li>I could also stare at the questions on SO and answer them as quickly as possible to make more reputation.</li></ul><p>However, I can’t contribute with intention like this. The time I make my contribution is yet to come.</p><h1 id="Application-and-software"><a href="#Application-and-software" class="headerlink" title="Application and software"></a>Application and software</h1><p>Take openSUSE Tumbleweed as an example.</p><p>There are a few  built-in applications on Tumbleweed. Am I wrong? I have a feeling that I’m wrong, if so, but how to  explain that I can see only a few apps when I click on the lizard icon in the left bottom corner of the desktop when I finished installing Tumbleweed ?</p><p>Is <a href="https://software.opensuse.org" target="_blank" rel="noopener">openSUSE Software center</a> for hosting softwares? Or is it like a vendor providing you all kinds of softwares?</p><p>Take <code>JaxoDraw</code> as example, what developer have is source code, they  compile the source code to several type of packages, <code>.rpm</code>, <code>.deb</code>, <code>ymp</code>. Then user will feel at home to install a software.</p><h1 id="Install-an-OS-by-a-USB-drive"><a href="#Install-an-OS-by-a-USB-drive" class="headerlink" title="Install an OS by a USB drive"></a>Install an OS by a USB drive</h1><p>I have tried with Ubuntu, openSUSE Tumbleweed, fedora.</p><p>Yet what a pity is that I haven’t tried to install OS online as I am confused with how this way works. I mean how does your computer connect to a PC when you are in the middle of installing an operating system?</p><ol><li>Download the a specific <a href="https://en.wikipedia.org/wiki/ISO_image" target="_blank" rel="noopener">ISO image</a>.</li><li><p>Burn it to DVD or USB</p><p>After inserting your USB stick, you can find out what device it is:</p><p>There is a nice <a href="https://en.opensuse.org/SDB:Live_USB_stick" target="_blank" rel="noopener">tutorial</a> offered by openSUSE, yet you’d better to complete this process on a linux distribution but not Mac, due to Apple is notorious for doing things its own way, so there are unexpected trouble. I do it on openSUSE Tumbleweed, there is visual feedback from the terminal after I type when executing the command below.</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk <span class="comment"># Find Block Device or diskutil list on mac</span></span><br><span class="line">$ sudo umount /dev/sdX</span><br><span class="line">$ sudo dd <span class="keyword">if</span>=/path/to/downloaded.iso of=/dev/sdX bs=4M status=progress && sync <span class="comment"># Burn the image to USB to make ISO Bootable on USB Drive</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="Customization-need-to-do-at-first"><a href="#Customization-need-to-do-at-first" class="headerlink" title="Customization need to do at first"></a>Customization need to do at first</h2><ul><li><p>Terminal customization</p><p><code>bash_it</code></p></li><li>OS shortcut cheatsheet</li></ul><h2 id="Get-familiar-with-the-package-manager"><a href="#Get-familiar-with-the-package-manager" class="headerlink" title="Get familiar with the package manager"></a>Get familiar with the package manager</h2><p>Generally, every linux distribution got its own package management tool. <code>apt</code>, <code>yum</code>, <code>zypper</code>, <code>dpkg</code>, but what about <code>npm</code>?</p><ul><li>Package manager for Ubuntu<ul><li><code>dpkg</code></li><li><code>apt-get</code></li></ul></li><li><p>Package manager for openSUSE</p><ul><li><p><code>zypper</code></p><p><code>zypper ar</code> means <code>zypper</code> add repository. What is that mean?</p></li><li><p>Options listed on <a href="https://software.opensuse.org" target="_blank" rel="noopener">https://software.opensuse.org</a></p><ul><li>Direct Install</li><li><p>1 Click Install</p><p>It download the <code>ymp</code> file, and then the file is supposed to open with <code>YaST</code> to get the software installed, yet every time I do so, the <code>YaST</code> failed to launch at last.</p></li></ul></li></ul></li><li>Package manager for fedora</li></ul><p>This whole process can be replaced by building a docker image, you don’t need to repeat the process above over and over agin.</p><blockquote id="fn_1"><sup>1</sup>. <a href="http://www.aosabook.org/en/index.html" target="_blank" rel="noopener">The Architecture of Open Source Applications</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> ↩</a></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/gJbe5ndb0Qexa/giphy.gif&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;Benefit-from-source-code-of-project&quot;&gt;&lt;a href=&quot;#Benefit-from-source-code-of-project&quot; class=&quot;headerlink&quot; title=&quot;Benefit from source code of project&quot;&gt;&lt;/a&gt;Benefit from source code of project&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It can draw attention from talented people and make it far beyond its initial capability.&lt;/p&gt;
&lt;p&gt;Many great products made significant success than anyone could have ever imagined before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They can open your mind and increase skills in an obvious degree and a profound way.&lt;/p&gt;
&lt;p&gt;There are some people striving on spread the impact of the great programs of history&lt;sup&gt;&lt;a href=&quot;#fn_1&quot; id=&quot;reffn_1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, maximize people are explode to the very best guidance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can take part of contributing.&lt;/p&gt;
&lt;p&gt;It’s a progress in civilization to have a chance to be part of the great projects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Open Source" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Open-Source/"/>
    
    
      <category term="open source" scheme="https://complicatedphenomenon.gitlab.io/tags/open-source/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/12/16/Docker/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/12/16/Docker/</id>
    <published>2018-12-16T12:37:13.000Z</published>
    <updated>2019-12-07T05:35:44.300Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/JuNcIKMIY8ozC/giphy.gif" alt><br>If a software was tested running well under an environment, it only can be declared that there won’t be problem if it were placed in the same environment. What to do if you want to make softwares independent of the operating system?</p><p>Use docker!<br><a id="more"></a></p><p><img src="/uploads/docker-arch.png" alt></p><h1 id="Docker-container-amp-image"><a href="#Docker-container-amp-image" class="headerlink" title="Docker container & image"></a>Docker container & image</h1><blockquote><p>The Docker image is created at build time and the Docker container is created at run time.</p></blockquote><p><a href="https://draveness.me/docker" target="_blank" rel="noopener">https://draveness.me/docker</a></p><h2 id="Containerizing-an-app"><a href="#Containerizing-an-app" class="headerlink" title="Containerizing an app"></a>Containerizing an app</h2><p>Containerize an app to make it run on any computer and OS with one click.</p><blockquote><p>用docker就是解决安全问题啊。现在网易云音乐，Skype都有docker版了。</p></blockquote><p>What does that mean? List some images of apps.</p><ul><li><a href="https://hub.docker.com/r/continuumio/anaconda/" target="_blank" rel="noopener">One of Anaconda docker container image <code>continuumio/anaconda</code></a></li><li><p><a href="https://hub.docker.com/r/aergus/latex/" target="_blank" rel="noopener">One of Latex docker container image <code>aergus/latex</code></a></p><p>An image for building LaTeX projects (based on Debian testing).</p></li><li><a href="https://hub.docker.com/r/fauria/lamp" target="_blank" rel="noopener">One of LAMP docker container image <code>fauria/lamp</code></a></li></ul><p>Does that mean I can run Ubuntu software on openSUSE through <del>docker image</del>?</p><p>Yes!</p><p>Better to take a much simpler application for trying.<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker image pull library/hello-world</span><br><span class="line">$ docker image ls</span><br><span class="line">$ docker container run hello-world</span><br><span class="line">$ docker run -it ubuntu bash</span><br></pre></td></tr></tbody></table></figure><p></p><p><span style="font-family: New York Times; font-size: 1.5em; color: red">Caution:</span> The ambitious try will cost much data flux.</p><h2 id="Docker-image"><a href="#Docker-image" class="headerlink" title="Docker image"></a>Docker image</h2><p>A Docker images is just a bunch of loosely-connected read-only layers.</p><h3 id="Frequently-docker-command"><a href="#Frequently-docker-command" class="headerlink" title="Frequently docker command"></a>Frequently docker command</h3><p>Almost anything worth doing with Docker can be done from the command line. This includes searching Docker Hub for repositories.</p><ul><li><p><code>docker search</code></p><p>How to pull an image with a certain tags?</p><ul><li><a href="https://stackoverflow.com/questions/28320134/how-to-list-all-tags-for-a-docker-image-on-a-remote-registry" target="_blank" rel="noopener">How to list all tags for a docker image on a remote registry?</a></li></ul></li><li><p><code>docker pull</code> :</p><p><code>docker pull [OPTIONS] [PATH/]IMAGE_NAME[:TAG]</code></p><ul><li><a href="https://ropenscilabs.github.io/r-docker-tutorial/04-Dockerhub.html" target="_blank" rel="noopener">Pushing and Pulling to and from Docker Hub</a></li></ul></li><li><p><code>docker image ls</code></p></li><li><code>docker ps -a</code> list all container(both stopped and running).</li><li><p><code>docker start</code> vs <code>docker run</code> vs <code>docker exec</code></p><p><code>docker restart</code> and <code>docker start</code> is same if the container is already stopped, if the container is not stopped <code>docker restart</code> will issue a stop then a start, therefore, more robust.</p></li></ul><div class="table-container"><table><thead><tr><th>Commands</th><th></th></tr></thead><tbody><tr><td>start</td><td>Start one or more stopped containers</td></tr><tr><td>run</td><td>Run a command in a new container</td></tr><tr><td>exec</td><td>Run a command in a running container</td></tr></tbody></table></div><ul><li><code>docker tag IMAGE ID image/TAG</code></li><li><code>docker build</code></li><li><code>docker push</code></li><li><p><code>docker logs -f <container name></code></p><p>In some case, you can only debug in the container, then check logs for a container.</p></li></ul><h3 id="A-demo-practice"><a href="#A-demo-practice" class="headerlink" title="A demo practice"></a>A demo practice</h3><p><a href="https://zhuanlan.zhihu.com/p/23599229" target="_blank" rel="noopener">A tutorial for docker easy to work on</a><br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker image ls</span><br><span class="line">rootproject/root-ubuntu16   latest              b16855622aac        6 months ago        1.6GB</span><br><span class="line">$ docker image rm 525bd2016729 <span class="comment"># Delete docker image</span></span><br><span class="line">$ docker ps -a <span class="comment">#查看docker中运行的容器 docker ps shows just running.</span></span><br><span class="line">$ docker container rm 269d3226bd30 688b0e6769bb 29e7da4384b7 282feca36cd4  bb3d75432292 07078d6859b7 <span class="comment"># Delete stopped container</span></span><br><span class="line">$ docker container ls -a</span><br><span class="line">$ docker container stop a800bba81e0f 18f134b0452a <span class="comment"># stop before remove</span></span><br><span class="line">$ docker container rm a800bba81e0f 18f134b0452a</span><br></pre></td></tr></tbody></table></figure><p></p><p>The image is incredibly big depending on the fact that <code>WordPress.zip</code> is around 10MB. It’s not convenient to push a big image tarball to Docker Hub.</p><p><strong>Q:</strong> Why the image is so big?</p><p><strong>A:</strong> Images include all the layers and each layer includes all the dependencies for what you installed.</p><h3 id="Where-to-find-the-docker-image-file"><a href="#Where-to-find-the-docker-image-file" class="headerlink" title="Where to find the docker image file?"></a>Where to find the docker image file?</h3><ul><li><a href="https://hub.docker.com/" target="_blank" rel="noopener">Docker Hub</a></li><li><a href="https://github.com/oracle/docker-images" target="_blank" rel="noopener">Docker images</a><br>Official source for Docker configurations, images, and examples of Docker files for <strong>Oracle products and projects</strong></li></ul><h2 id="Docker-container"><a href="#Docker-container" class="headerlink" title="Docker container"></a>Docker container</h2><blockquote><p>Containers could easily be understood through the concept of virtual machines. Similar to virtual machines, containers provide security by running<br>separate instances of operating systems simultaneously with no interaction with each other.</p></blockquote><h3 id="Run-docker-Wordpress"><a href="#Run-docker-Wordpress" class="headerlink" title="Run docker Wordpress"></a>Run docker Wordpress</h3><p><em>Reference</em>:</p><ul><li><a href="https://www.hostinger.com/tutorials/run-docker-wordpress" target="_blank" rel="noopener">A more detailed guild</a>. There are bunch of similar brief guide. E.g. <a href="https://themeisle.com/blog/local-wordpress-development-using-docker/" target="_blank" rel="noopener">ref1</a>, <a href="https://www.serverlab.ca/tutorials/osx/wordpress-development-on-osx-using-docker/" target="_blank" rel="noopener">ref2</a>, <a href="https://www.adrianprieto.com/wordpress-development-with-docker-in-5-steps/" target="_blank" rel="noopener">ref3</a>.</li><li><a href="https://www.linode.com/docs/quick-answers/linux/wordpress-with-docker-compose/" target="_blank" rel="noopener">WordPress with  docker compose</a>.</li></ul><p>The Compose file is a YAML file defining services, networks and volumes.<br><code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">   db:</span></span><br><span class="line"><span class="attr">     image:</span> <span class="attr">mysql:5.7</span></span><br><span class="line"><span class="attr">     volumes:</span></span><br><span class="line"><span class="attr">       - db_data:</span><span class="string">/var/lib/mysql</span></span><br><span class="line"><span class="attr">     restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">     environment:</span></span><br><span class="line"><span class="attr">       MYSQL_ROOT_PASSWORD:</span> <span class="string">somewordpress</span></span><br><span class="line"><span class="attr">       MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">       MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">       MYSQL_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line"></span><br><span class="line"><span class="attr">   wordpress:</span></span><br><span class="line"><span class="attr">     depends_on:</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">db</span></span><br><span class="line"><span class="attr">     image:</span> <span class="attr">wordpress:5.1.0-apache</span></span><br><span class="line"><span class="attr">     ports:</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">"8000:80"</span></span><br><span class="line"><span class="attr">     restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">     environment:</span></span><br><span class="line"><span class="attr">       WORDPRESS_DB_HOST:</span> <span class="attr">db:3306</span></span><br><span class="line"><span class="attr">       WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">       WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">    db_data:</span></span><br></pre></td></tr></tbody></table></figure><p><em>Confusion</em>:</p><ul><li>What is directory  <code>/var/lib/mysql</code> refers to?</li><li>Where is the local image?</li><li>2 containers will be involved, one (MySQL) runs the database, the other (PHP with Apache?) runs web server.</li></ul><p>The command <code>docker-compose up</code> will run docker-compose in the foreground. If you would rather run it as a background process, you use the <code>-d</code> flag<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br><span class="line">$ docker image inspect mysql:5.7</span><br><span class="line">$ docker-compose ps</span><br></pre></td></tr></tbody></table></figure><p></p><blockquote><p>When a Docker container is stopped, it is also deleted; this is how Docker is designed to work. However, your WordPress files and data will be preserved, as the <code>docker-compose.yml</code> file was configured to create persistent named volumes for that data.</p><p>If you want to remove this data and start over with your WordPress site, you can add the —volumes flag to the previous command. This will permanently delete the WordPress posts and customizations you’ve made so far.</p></blockquote><p>Then the question becomes how do I create a new docker images for my applications?</p><h3 id="Create-a-new-docker-images-for-your-applications"><a href="#Create-a-new-docker-images-for-your-applications" class="headerlink" title="Create a new docker images for your applications"></a>Create a new docker images for your applications</h3><ul><li><p>Why should I dockerize my WordPress sites?</p><p><a href="https://buddy.works/guides/wordpress-docker-kubernetes-part-1" target="_blank" rel="noopener">Dockerize WordPress and make it run on any computer and OS with one click</a>.</p></li><li>Forthe aim of sharing the app, pushing WordPress to Docker Hub.</li></ul><p><a href="https://stackoverflow.com/questions/54956822/how-to-convert-wordpress-container-into-image" target="_blank" rel="noopener">Asking this question on SO</a>.</p><h3 id="Run-valgrind-container"><a href="#Run-valgrind-container" class="headerlink" title="Run valgrind container"></a>Run <code>valgrind</code> container</h3><p><strong>Since valgrind is not available to newest version of OSX, Then it is a smart approach to test my code in a container.</strong></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull etews/gcc-expect-valgrind</span><br><span class="line">$ docker run -it etews/gcc-expect-valgrind</span><br><span class="line">root@3da290baa6cd:/<span class="comment"># gcc</span></span><br><span class="line">gcc: fatal error: no input files</span><br><span class="line">compilation terminated.</span><br><span class="line">root@3da290baa6cd:/<span class="comment"># valgrind</span></span><br><span class="line">valgrind: no program specified</span><br><span class="line">valgrind: Use --<span class="built_in">help</span> <span class="keyword">for</span> more information.</span><br><span class="line">root@b473564baa16:/<span class="comment"># cat /etc/os-release</span></span><br><span class="line">PRETTY_NAME=<span class="string">"Debian GNU/Linux 9 (stretch)"</span></span><br><span class="line">NAME=<span class="string">"Debian GNU/Linux"</span></span><br><span class="line">VERSION_ID=<span class="string">"9"</span></span><br><span class="line">VERSION=<span class="string">"9 (stretch)"</span></span><br><span class="line">ID=debian</span><br><span class="line">HOME_URL=<span class="string">"https://www.debian.org/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://www.debian.org/support"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.debian.org/"</span></span><br></pre></td></tr></tbody></table></figure><p>A very serious issue: Does an image contain an OS? If that so, that doesn’t make sense as it cost so much space in hard disk.</p><p>If you need several software, for example</p><ul><li>Valgrind</li><li>Root<br>That means I installed not only Ubuntu but also Debian.</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps</span><br><span class="line">$ docker run -it etews/gcc-expect-valgrind</span><br><span class="line">root@11742d1bd167:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></tbody></table></figure><p><em>I can see a container is running behind, how I can run it interactively again?</em></p><p>Clearly you want to run a command in a running container,  <code>docker exec -it etews/gcc-expect-valgrind</code> will do.</p><ul><li><a href="https://www.digitalocean.com/community/tutorials/working-with-docker-containers" target="_blank" rel="noopener">Working with Docker Containers</a></li><li><a href="https://medium.com/@nagarwal/lifecycle-of-docker-container-d2da9f85959" target="_blank" rel="noopener">Lifecycle of Docker Container</a></li></ul><h3 id="Customize-the-Debian-OS-container"><a href="#Customize-the-Debian-OS-container" class="headerlink" title="Customize the Debian OS container"></a>Customize the Debian OS container</h3><ul><li>Install vim.</li><li>Customize and colorize vim. <a href="git@github.com:amix/vimrc.git">The ultimate Vim configuration: vimrc</a></li><li>Customize and colorize <code>.bashrc</code>.<ul><li><a href="https://unix.stackexchange.com/questions/148/colorizing-your-terminal-and-shell-environment#" target="_blank" rel="noopener">A nice configuration example</a>  </li><li>Visit <a href="http://bashrcgenerator.com/" target="_blank" rel="noopener">http://bashrcgenerator.com</a></li><li><a href="https://github.com/Bash-it/bash-it" target="_blank" rel="noopener">A community Bash framework</a> 📌💯</li></ul></li></ul><p>After customizing the OS as a working environment , then make this container as an image.</p><h3 id="Share-data-between-the-host-machine-and-the-container"><a href="#Share-data-between-the-host-machine-and-the-container" class="headerlink" title="Share data between the host machine and the container"></a>Share data between the host machine and the container</h3><ul><li><a href="https://stackoverflow.com/questions/22907231/copying-files-from-host-to-docker-container" target="_blank" rel="noopener">Copying files from host to Docker container</a><ul><li><code>docker cp FromPath containerID:ToPATH</code></li><li><code>docker cp mycontainer:FromPath ToPATH</code></li></ul></li></ul><h3 id="Run-golang"><a href="#Run-golang" class="headerlink" title="Run golang"></a>Run <code>golang</code></h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">○ → docker run -it golang</span><br><span class="line">root@fe3971cd0f6b:/go<span class="comment"># ls</span></span><br><span class="line">bin  src</span><br><span class="line">root@fe3971cd0f6b:/<span class="comment"># cat /etc/os-release</span></span><br><span class="line">PRETTY_NAME=<span class="string">"Debian GNU/Linux 9 (stretch)"</span></span><br><span class="line">NAME=<span class="string">"Debian GNU/Linux"</span></span><br><span class="line">VERSION_ID=<span class="string">"9"</span></span><br><span class="line">VERSION=<span class="string">"9 (stretch)"</span></span><br><span class="line">ID=debian</span><br><span class="line">HOME_URL=<span class="string">"https://www.debian.org/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://www.debian.org/support"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.debian.org/"</span></span><br><span class="line">root@fe3971cd0f6b:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></tbody></table></figure><p>Then you see, for saving cost of space, I should install <code>golang</code> in container <code>valgrind</code> as it runs on the same OS as <code>golang</code>.</p><h2 id="How-to-write-Dockerfile"><a href="#How-to-write-Dockerfile" class="headerlink" title="How to write Dockerfile?"></a>How to write <code>Dockerfile</code>?</h2><p>Dockerfile可以理解为一种配置文件，用来告诉docker build命令应该执行哪些操作。</p><h3 id="Dockerfile-instructions"><a href="#Dockerfile-instructions" class="headerlink" title="Dockerfile instructions"></a>Dockerfile instructions</h3><p><code>RUN</code> —runs a command and creates an image layer. Used to install packages into containers.</p><p>This is also the process of building an environment.</p><ul><li><a href="https://towardsdatascience.com/learn-enough-docker-to-be-useful-b0b44222eef5" target="_blank" rel="noopener">A detailed explanation on Dockerfile</a>.</li></ul><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a><code>docker-compose.yml</code></h3><h2 id="Docker-Reference"><a href="#Docker-Reference" class="headerlink" title="Docker Reference"></a>Docker Reference</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" target="_blank" rel="noopener">Docker tutorial in Chinese</a></li><li><a href="https://www.jianshu.com/p/8408e06b7273" target="_blank" rel="noopener">Ways to import and export image</a></li><li><a href="https://docker-curriculum.com/#docker-run" target="_blank" rel="noopener">https://docker-curriculum.com/#docker-run</a></li></ul><p>The architecture of a new technology is innovative, that’s why makes itself valuable. For common users, better to catch up with the cutting edge technology, as even though it’s hard to be original but it’s easy to follow up.</p><h1 id="nvidia-docker"><a href="#nvidia-docker" class="headerlink" title="nvidia-docker"></a>nvidia-docker</h1><p><code>nvidia-docker</code> enables you build and run Docker containers leveraging NVIDIA GPUs. before using it, make sure you have installed the NVIDIA driver and a supported version of Docker for your distribution.</p><p>Try a demo.</p><ol><li>Pull down the nvidia-docker container to the system<br><code>$ docker pull nvrc.io/nvidia/tensorflow:17.06</code></li><li>Use <code>nvidia-docker</code> to ensure that the correct NVIDIA drivers and libraries are used.<ul><li><a href="https://docs.nvidia.com/deeplearning/frameworks/bp-docker/index.html#running" target="_blank" rel="noopener">Offcial guide</a></li></ul></li></ol><h1 id="openSUSE-Kubic"><a href="#openSUSE-Kubic" class="headerlink" title="openSUSE Kubic"></a>openSUSE Kubic</h1><p><a href="https://news.opensuse.org/2017/05/29/introducing-kubic-project-a-new-open-source-project/" target="_blank" rel="noopener">Rethink the OS for modern IT applications, and basically are hoping to build a next-generation container operating system.</a></p><h1 id="Fedora-boxes"><a href="#Fedora-boxes" class="headerlink" title="Fedora boxes"></a>Fedora boxes</h1><h1 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h1><blockquote><p>真实的生产环境应用会包含多个容器，而这些容器还很可能会跨越多个服务器主机部署。Kubernetes 提供了为那些工作负载大规模部署容器的编排与管理能力。Kubernetes 编排让你能够构建多容器的应用服务，在集群上调度或伸缩这些容器，以及管理它们随时间变化的健康状态。</p></blockquote><p>编排系统（orchestration）</p><ul><li><a href="http://kubernetesbyexample.com" target="_blank" rel="noopener">A hands-on introduction to Kubernetes</a>.</li></ul><h2 id="First-impression"><a href="#First-impression" class="headerlink" title="First impression"></a>First impression</h2><ul><li>Kubectl is a command line interface for running commands against Kubernetes clusters.</li><li>A pod is a collection of containers sharing a network and mount namespace and is the basic unit of deployment in Kubernetes.</li><li>Labels are the mechanism you use to organize Kubernetes objects</li></ul><h2 id="More-about-Kubernetes"><a href="#More-about-Kubernetes" class="headerlink" title="More about Kubernetes"></a>More about Kubernetes</h2><ul><li><a href="https://blog.kubernauts.io/ci-cd-on-kubernetes-with-gitlab-46d2a92b3565" target="_blank" rel="noopener">CI/CD on Kubernetes with GitLab</a></li><li><a href="https://github.com/answer1991/articles/blob/master/Kubernetes-is-the-next-generation-os.md" target="_blank" rel="noopener">Introduction on Kubernetes</a></li></ul><p><span style="font-family: papyrus; font-size:1.5em; color: red"><br>Contents remains to be continued …</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Remove the barrier between different departments of development, test, and deployment, link them together.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Container" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Container/"/>
    
    
      <category term="CI &amp; CD" scheme="https://complicatedphenomenon.gitlab.io/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>Graphviz</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/10/19/Graphviz/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/10/19/Graphviz/</id>
    <published>2018-10-19T07:10:16.000Z</published>
    <updated>2019-11-12T14:02:52.030Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/7VcMhBX5RiDkI/giphy.gif" alt></p><h1 id="A-fact-which-lighten-my-mood"><a href="#A-fact-which-lighten-my-mood" class="headerlink" title="A fact which lighten my mood"></a>A fact which lighten my mood</h1><p>Graphviz is hosted on gitlab, It’s the first serious projects I’ve ever met on Gitlab. I think there are many immature projects hosted on gitlab for which has a quite short history.<br><a id="more"></a></p><h1 id="Code-example"><a href="#Code-example" class="headerlink" title="Code example"></a>Code example</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">digraph G {  </span><br><span class="line">label = "My way to become a astrophysicist";  </span><br><span class="line">node [shape = record];  </span><br><span class="line"></span><br><span class="line">A  [label = "Data scientist", color = red];</span><br><span class="line"></span><br><span class="line">B1 [label = "Statistics", color = green];  </span><br><span class="line">B2 [label = "Astronomy", color = green];</span><br><span class="line">B3 [label = "Reasonable Life", color = green];</span><br><span class="line">B4 [label = "Composing", color = green];</span><br><span class="line">B5 [label = "Programming", color = green];</span><br><span class="line">B6 [label = "Presentation", color = green];</span><br><span class="line"></span><br><span class="line">B1C1 [label = "Foundation"];</span><br><span class="line">B1C2 [label = "Algorithm"];</span><br><span class="line">B2C1 [label = "Arxiv"];</span><br><span class="line">B2C2 [label = "Classical Books"];</span><br><span class="line">B3C1 [label = "Speaking fluently"];</span><br><span class="line">B3C2 [label = "Exercise"];</span><br><span class="line">B3C3 [label = "Travel"];</span><br><span class="line">B3C4 [label = "Read a lot of books"];</span><br><span class="line">B3C5 [label = "Just keep \nin \ntouch with family"];</span><br><span class="line">B4C1 [label = "Daily writting"];</span><br><span class="line">B4C2 [label = "Pick a right \nproblem"];</span><br><span class="line">B5C1 [label = "I got this"];</span><br><span class="line">B2C1D1 [label = "Think hard"];</span><br><span class="line"></span><br><span class="line">A->{B1;B2;B3;B4;B5;B6}[color="#FFFF00"]</span><br><span class="line">B1->{B1C1;B1C2}[color="blue"]</span><br><span class="line">B2->{B2C1;B2C2}[color="#00F5FF"]</span><br><span class="line">B3->{B3C1;B3C2;B3C3;B3C4;B3C5}[color="#0000CD"]</span><br><span class="line">B4->{B4C1;B4C2}</span><br><span class="line">B5->B5C1;</span><br><span class="line">B2C1->B2C1D1;</span><br><span class="line">B1C1->B1C2;</span><br><span class="line">B2C1->B2C2;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Results-and-effects"><a href="#Results-and-effects" class="headerlink" title="Results and effects"></a>Results and effects</h1><p>Graphviz has several modes of layout.</p><p><code>dot -Tpng a.dot -o a.png</code> generates:</p><p><img src="/uploads/graphviz.png" alt="png"></p><p><code>circo -Tpng a.dot -o a.png</code> gernerates:</p><p><img src="/uploads/circo.png" alt="png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="http://icodeit.org/2015/11/using-graphviz-drawing/" target="_blank" rel="noopener">使用graphviz绘制流程图</a></li><li><a href="http://graphviz.org/doc/info/shapes.html" target="_blank" rel="noopener">Complete manual</a></li><li><a href="https://www.tonyballantyne.com/graphs.html" target="_blank" rel="noopener">Specific example 1</a></li><li><a href="https://renenyffenegger.ch/notes/tools/Graphviz/examples/index" target="_blank" rel="noopener">Specific example 2</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/7VcMhBX5RiDkI/giphy.gif&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;A-fact-which-lighten-my-mood&quot;&gt;&lt;a href=&quot;#A-fact-which-lighten-my-mood&quot; class=&quot;headerlink&quot; title=&quot;A fact which lighten my mood&quot;&gt;&lt;/a&gt;A fact which lighten my mood&lt;/h1&gt;&lt;p&gt;Graphviz is hosted on gitlab, It’s the first serious projects I’ve ever met on Gitlab. I think there are many immature projects hosted on gitlab for which has a quite short history.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Workflow Tool" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Workflow-Tool/"/>
    
    
      <category term="idea display methods" scheme="https://complicatedphenomenon.gitlab.io/tags/idea-display-methods/"/>
    
  </entry>
  
  <entry>
    <title>Incorporate Jupyter notebook into Jekyll post</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/10/04/JupyterNotebook/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/10/04/JupyterNotebook/</id>
    <published>2018-10-04T02:10:10.000Z</published>
    <updated>2019-12-07T05:35:44.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Technical-preparation"><a href="#Technical-preparation" class="headerlink" title="Technical preparation"></a>Technical preparation</h1><p>Combine Jupyter Notebook with Jekyll blog, in a special case, we upload the local figure.</p><ul><li><a href="https://www.linode.com/docs/applications/project-management/jupyter-notebook-on-jekyll/" target="_blank" rel="noopener">A detailed guide to blog with Jupyter notebook</a> or <a href="http://briancaffey.github.io/2016/03/14/ipynb-with-jekyll.html" target="_blank" rel="noopener">a hands-on method</a>.<ul><li><code>jupyter nbconvert --to markdown xxxx.ipynb</code> or download xxxx.ipynb as Markdown</li><li>Add the head block.</li></ul></li><li><a href="http://sgeos.github.io/github/jekyll/2016/08/30/adding_images_and_downloads_to_a_github_pages_jekyll_blog.html" target="_blank" rel="noopener">Adding Images and Downloads to a GitHub Pages Jekyll Blog</a>.<ul><li><code>Mkdir assets</code> under the top directory.</li><li><code>![png](/assets/****.png)</code></li></ul></li></ul><a id="more"></a><p>Below contents is converted from Jupyter Notebook.</p><h1 id="Numerical-python-ecosystem"><a href="#Numerical-python-ecosystem" class="headerlink" title="Numerical python ecosystem"></a>Numerical python ecosystem</h1><h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><ul><li><a href="https://arogozhnikov.github.io/2015/11/29/using-fortran-from-python.html" target="_blank" rel="noopener">Using fortran from python</a></li></ul><h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><p>The most important part of the Pandas library is the DataFrame. A <code>DataFrame</code> holds the type of data you might think of as a table. This is similar to a sheet in Excel, or a table in a SQL database.</p><p>Want to know the basic usage look like this?</p><ul><li><a href="https://github.com/pandas-dev/pandas" target="_blank" rel="noopener">pandas source</a>.</li></ul><h2 id="Scipy"><a href="#Scipy" class="headerlink" title="Scipy"></a>Scipy</h2><ul><li>Cadabra</li></ul><h2 id="Sklearn"><a href="#Sklearn" class="headerlink" title="Sklearn"></a>Sklearn</h2><p>I am eager to write numerous Python scripts to improve my skill in Python programming, but I haven’t find a proper opportunity. Then I determine to develop skills on data analysis and there already is a good beginning. When I find Kaggle, I suddenly get that it’s far better to host python notebook here. Since it can be displayed well and run on cloud. The old way I do it is local Jupyter notebook plus github plus nbviewer. However, Python notebook is slow to display on github and nbviewer can’t meet the need that you want to modify it and then test.</p><p>During data analysis, I don’t need to write algorithm, and define function or class as it were all encapsulated in a library. That means even I know little about advanced knowledge with Python, just obey the usage of library is enough for me to accomplish my task. So I fail to get a proficient programming skill. I hate to place myself in such a dangerous situation.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> linalg <span class="keyword">as</span> la</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line">sympy.init_printing()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># activating magic</span></span><br><span class="line">%load_ext fortranmagic</span><br></pre></td></tr></tbody></table></figure><p>The fortranmagic extension is already loaded. To reload it, use:</p><pre><code>%reload_ext fortranmagic</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%%fortran</span><br><span class="line">subroutine my_function(x, y, z)</span><br><span class="line">    real, intent(<span class="keyword">in</span>) :: x(:), y(:)</span><br><span class="line">    real, intent(out) :: z(size(x))</span><br><span class="line">    ! using vector operations</span><br><span class="line">    z(:) = sin(x(:) + y(:))</span><br><span class="line">end subroutine</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Now we can use this function</span></span><br><span class="line">x = numpy.random.normal(size=<span class="number">100</span>)</span><br><span class="line">y = numpy.random.normal(size=<span class="number">100</span>)</span><br><span class="line">z = my_function(x, y)</span><br></pre></td></tr></tbody></table></figure><p>Step by step is too slow. In order to learn it, I need to implement something through using the tool.</p><h2 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"></span><br><span class="line">X = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">Y = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">X, Y = np.meshgrid(X, Y)</span><br><span class="line">R = np.sqrt(X**<span class="number">2</span> + Y**<span class="number">2</span>)</span><br><span class="line">Z = np.sin(R)</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig)</span><br><span class="line">ax.plot_surface(X, Y, Z, rstride=<span class="number">1</span>, cstride=<span class="number">1</span>, cmap=cm.viridis)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><pre><code><mpl_toolkits.mplot3d.art3d.Poly3DCollection at 0x101336e710></code></pre><p><img src="/uploads/ScipyEcosystem_9_1.png" alt="png"></p><h1 id="Bonus-for-using-Jupyter-notebook"><a href="#Bonus-for-using-Jupyter-notebook" class="headerlink" title="Bonus for using Jupyter notebook"></a>Bonus for using Jupyter notebook</h1><h2 id="Why-there-is-Jupyter-Notebook"><a href="#Why-there-is-Jupyter-Notebook" class="headerlink" title="Why there is Jupyter Notebook?"></a>Why there is Jupyter Notebook?</h2><p>Advantage of JN.</p><ul><li><p>Cite from a talk given by Brian Granger</p><blockquote><p>Another really exciting thing is what O’Reilly Media is doing. They are embracing the notebook at a fairly deep level.The first is they have this new learning site.Along with this actual website, O’Reilly has this open source project called<a href="https://github.com/oreillymedia/thebe" target="_blank" rel="noopener"><code>thebe</code></a></p><p>When I first saw this, I think part of my response was “wow, that’s a little bit like over kill me maybe”when you think about it, how much worse is it? Some one will publish article requiring this much analysis and leave that analysis out, there is no way anyone would ever be able to reproduce that work.</p><p><a href="https://github.com/BuzzFeedNews/everything#libraries-and-tools" target="_blank" rel="noopener"><code>BuzzFeed</code> are doing fantastic work</a>. They had committed to do this for all of their data driven articles, they are not sort of after the fact making sort decisions about “well, should we open this or not”,they just said “we are doing it for everything”.</p></blockquote></li><li>Interview with <a href="http://fperez.org/" target="_blank" rel="noopener">Fernado Perez</a> about <code>Ipython Projects</code>.</li></ul><h3 id="How-has-Jupyter-changed-the-way-you-work"><a href="#How-has-Jupyter-changed-the-way-you-work" class="headerlink" title="How has Jupyter changed the way you work?"></a>How has Jupyter changed the way you work?</h3><p>Having repeatable work that can be packaged and shared with others provides an enormous boost for how we work together. Jupyter Notebooks give context to the code. When you share your work, you’re not just sharing some source files that have to be deciphered; you’re sharing a whole train of thought, which makes it much easier to see what’s going on. This isn’t just true for your team members; it’s equally true if you drop something and come back six months later.</p><h3 id="Acadiemia"><a href="#Acadiemia" class="headerlink" title="Acadiemia"></a><a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/59848?ut" target="_blank" rel="noopener">Acadiemia</a></h3><p>Poor reproducibility reality: Reports of a lack of reproducibility and transparency have led funders and others to require open data and code as part of their published outputs. However, current academic publishing systems still cannot support the solutions that technology has enabled, such as the Jupyter Notebook. Mark Hahnel and Marius Tulbure discuss the opportunities for Jupyter notebooks to be the final output of academic research, arguing that Jupyter could help disrupt the inefficiencies in cost and scale of open access academic publishing.</p><ul><li><a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/59848?ut=tw-data-na-article-lgen_paco_nathan_jupyter_as" target="_blank" rel="noopener">Closing the gap between Jupyter and academic publishing</a></li></ul><h2 id="Techniques-in-using-Jupyter-Notebook"><a href="#Techniques-in-using-Jupyter-Notebook" class="headerlink" title="Techniques in using Jupyter Notebook"></a>Techniques in using Jupyter Notebook</h2><ul><li><a href="https://nbviewer.jupyter.org" target="_blank" rel="noopener">Nbviewer</a></li><li><p><a href="http://echorand.me/presentation-slides-with-jupyter-notebook.html" target="_blank" rel="noopener">presentation-slides-with-jupyter-notebook</a></p><ul><li><a href="https://nbviewer.jupyter.org/urls/losc.ligo.org/s/events/LOSC_Event_tutorial.ipynb" target="_blank" rel="noopener">LIGO_LOSC_Event</a></li></ul></li></ul><h2 id="Install-Jupyter-extensions-collections"><a href="#Install-Jupyter-extensions-collections" class="headerlink" title="Install Jupyter extensions collections"></a>Install Jupyter extensions collections</h2><ul><li><a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">https://github.com/ipython-contrib/jupyter_contrib_nbextensions</a></li><li><a href="https://ndres.me/post/best-jupyter-notebook-extensions" target="_blank" rel="noopener">https://ndres.me/post/best-jupyter-notebook-extensions</a></li><li>jupytext</li></ul><h2 id="28-Jupyter-Notebook-tips-tricks-and-shortcuts"><a href="#28-Jupyter-Notebook-tips-tricks-and-shortcuts" class="headerlink" title="28 Jupyter Notebook tips, tricks, and shortcuts"></a><a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/" target="_blank" rel="noopener">28 Jupyter Notebook tips, tricks, and shortcuts</a></h2><p>What if you want to see the value of multiple statements at once?<br></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="Use-CSS-to-diversify-information-display"><a href="#Use-CSS-to-diversify-information-display" class="headerlink" title="Use CSS to diversify information display."></a>Use CSS to diversify information display.</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-family:Papyrus; font-size:2em; color:red;"</span>></span></span><br><span class="line">Content</span><br><span class="line"><span class="tag"></<span class="name">span</span>></span></span><br></pre></td></tr></tbody></table></figure><ul><li>Font family cheatsheet examples:<ul><li><span style="font-family:Papyrus; font-size:1em; color:red;"> Papyrusn</span></li><li><span style="font-family:Cosmic Sans MS; font-size:1em; color:red;"> Cosmic Sans MS </span></li><li><span style="font-family:New York Times; font-size:1em; color:red;"> New York Times</span></li><li><span style="font-family:Helvetica; font-size:1em; color:red;"> Helvetica</span></li><li><span style="font-family:Monospace; font-size:1em; color:red;"> Monospace</span></li><li><span style="font-family:Script; font-size:1em; color:red;"> Script</span></li></ul></li><li><a href="https://www.cssfontstack.com/" target="_blank" rel="noopener">https://www.cssfontstack.com</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Technical-preparation&quot;&gt;&lt;a href=&quot;#Technical-preparation&quot; class=&quot;headerlink&quot; title=&quot;Technical preparation&quot;&gt;&lt;/a&gt;Technical preparation&lt;/h1&gt;&lt;p&gt;Combine Jupyter Notebook with Jekyll blog, in a special case, we upload the local figure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/applications/project-management/jupyter-notebook-on-jekyll/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A detailed guide to blog with Jupyter notebook&lt;/a&gt; or &lt;a href=&quot;http://briancaffey.github.io/2016/03/14/ipynb-with-jekyll.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a hands-on method&lt;/a&gt;.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jupyter nbconvert --to markdown xxxx.ipynb&lt;/code&gt; or download xxxx.ipynb as Markdown&lt;/li&gt;
&lt;li&gt;Add the head block.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sgeos.github.io/github/jekyll/2016/08/30/adding_images_and_downloads_to_a_github_pages_jekyll_blog.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Adding Images and Downloads to a GitHub Pages Jekyll Blog&lt;/a&gt;.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Mkdir assets&lt;/code&gt; under the top directory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;![png](/assets/****.png)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Documentation Tool" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Documentation-Tool/"/>
    
    
      <category term="idea display methods" scheme="https://complicatedphenomenon.gitlab.io/tags/idea-display-methods/"/>
    
  </entry>
  
  <entry>
    <title>Using Jekyll to make static website</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/09/28/Jekyll/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/09/28/Jekyll/</id>
    <published>2018-09-28T02:10:10.000Z</published>
    <updated>2019-12-07T05:35:44.304Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/q5rJRKCxECy3e/giphy.gif" style="width: 60%; height: 60%" ​></p><h1 id="How-czfzdxx-gitlab-io-come-into-being"><a href="#How-czfzdxx-gitlab-io-come-into-being" class="headerlink" title="How czfzdxx.gitlab.io come into being?"></a>How <a href="https://czfzdxx.gitlab.io" target="_blank" rel="noopener">czfzdxx.gitlab.io</a> come into being?</h1><p>It credit to Free and open-source Jekyll theme <a href="https://agusmakmun.github.io" target="_blank" rel="noopener">https://agusmakmun.github.io</a>.</p><p>Build a Jekyll website is my primary goal, the secondary goal is to deploy it on gitlab. Things would become easier if you know</p><ul><li>How to use Jekyll with bundle</li><li>How to write <code>.gitlab-ci.yml</code> file.<a id="more"></a></li></ul><p><span style="font-family: New York Times; font-size:1em; color: red"><br>Update: This old Jekyll site is deprecated, now <a href="https://czfzdxx.gitlab.io" target="_blank" rel="noopener">https://czfzdxx.gitlab.io</a> is supported by <code>pelican</code>.</span></p><h1 id="Quickstart"><a href="#Quickstart" class="headerlink" title="Quickstart"></a>Quickstart</h1><p>Customize from scratch, you just</p><ul><li>Build a blog with default theme. <a href="https://jekyllrb.com/docs/" target="_blank" rel="noopener">Guide</a><br>Run <code>bundle exec jekyll serve</code> on terminal and preview on a browser.</li></ul><p>Let the professional web developer take care of the web style. you</p><ul><li>Choose a theme from <a href="jekyllthemes.org">jekyllthemes.org</a> or <a href="https://jekyllthemes.io/" target="_blank" rel="noopener">jekyllthemes.io</a>.<br>The formal is contributed by volunteers, and the latter is mostly in charge.</li></ul><p>Since my idea is contents oriented blogging and leave behind the the work of front-end, I choose the minimal theme type.</p><h1 id="Advanced-techniques"><a href="#Advanced-techniques" class="headerlink" title="Advanced techniques"></a>Advanced techniques</h1><h2 id="Automate-the-procedure-of-create-a-post"><a href="#Automate-the-procedure-of-create-a-post" class="headerlink" title="Automate the procedure of create a post"></a>Automate the procedure of create a post</h2><p>Jekyll requires blog posts to be saved in files with a specific filename. <code>YY-MM-DD-Title.md</code>, which is annoying to realize manually. Automatic the process of creating a new post with rake task. <a href="https://www.stuartellis.name/articles/rake/" target="_blank" rel="noopener">Using Rake to automatic tasks</a></p><p>eg: <code>rake post TITLE='hello, world'</code></p><h2 id="Enable-mathjax"><a href="#Enable-mathjax" class="headerlink" title="Enable mathjax"></a><a href="http://sgeos.github.io/github/jekyll/2016/08/21/adding_mathjax_to_a_jekyll_github_pages_blog.html" target="_blank" rel="noopener">Enable mathjax</a></h2><p>Displaying Mathematical formula is common in the posts, here I use <code>Mathjax</code> to realize it.</p><h2 id="Add-Disqus-to-Jekyll-website"><a href="#Add-Disqus-to-Jekyll-website" class="headerlink" title="Add Disqus to Jekyll website"></a>Add Disqus to Jekyll website</h2><p><a href="https://disqus.com/admin/install/platforms/jekyll/" target="_blank" rel="noopener">Instructions given by Disqus</a> is quite straightforward.</p><ul><li>Add <code>comments: true</code> to Front Matter</li><li>Copy and paste the Universal Embed Code in the appropriate template where you’d like Disqus to load.</li><li><a href="https://stackoverflow.com/questions/48281060/disqus-comments-on-jekyll-show-when-hosted-on-localhost-but-not-when-hosted-on-g" target="_blank" rel="noopener">disqus comments on jekyll show when host on  local but not when host on gitlab</a></li></ul><h2 id="Add-Table-of-Contents-to-Jekyll-Blog"><a href="#Add-Table-of-Contents-to-Jekyll-Blog" class="headerlink" title="Add Table of Contents to Jekyll Blog"></a><a href="https://ouyi.github.io/post/2017/12/31/jekyll-table-of-contents.html" target="_blank" rel="noopener">Add Table of Contents to Jekyll Blog</a></h2><p>Fortunately, rendering of table of contents (TOC) is supported by kramdown, which is Jekyll 3.0.0’s default Markdown processor</p><h2 id="Show-the-last-modified-time"><a href="#Show-the-last-modified-time" class="headerlink" title="Show the last modified time"></a>Show the last modified time</h2><p>Require plugin</p><ul><li><a href="https://github.com/gjtorikian/jekyll-last-modified-at" target="_blank" rel="noopener">jekyll-last-modified-at</a></li><li>Add <code>gem "jekyll-last-modified-at"</code> to Gemfile.</li><li><p>Add below to <code>_layout/post.html</code>.</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-date"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">span</span>></span></span><br><span class="line">    Last modified at {{ page.last_modified_at | date: '%Y %b %d' }}</span><br><span class="line">  <span class="tag"></<span class="name">span</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure></li></ul><p>It works well locally, but hosting the repository on GitHub pages omit the last modified date.</p><h3 id="Make-it-work-like-hexo"><a href="#Make-it-work-like-hexo" class="headerlink" title="Make it work like hexo"></a>Make it work like hexo</h3><blockquote><p>GitHub will not access any external plugins at all for security reasons. Therefore, the solution is to generate your site locally and push only the generated site (i.e., the contents of _site) to the GitHub branch used for GitHub pages (this used to be the gh_pages branch, don’t know if they use master now).</p></blockquote><p>Create a 2 repositories, one is <code>backup</code>, the other is <code>heynoturningback.github.io</code>. Write a bash script <code>Deploy.sh</code><br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp -r _site/* ../heynoturningback.github.io</span><br><span class="line"><span class="built_in">cd</span> ../heynoturningback.github.io</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Enter the commit message:'</span></span><br><span class="line"><span class="built_in">read</span> commitMessage</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"<span class="variable">$commitMessage</span>"</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></tbody></table></figure><p></p><p>You only need to work in <code>heynoturningback.github.io</code> for one time<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@github.com:heynoturningback/backup.git</span><br></pre></td></tr></tbody></table></figure><p></p><p>Then always work in <code>backup</code>, when the time to release is mature, run <code>bash Deploy.sh</code></p><h3 id="Configure-a-publishing-source-for-github-pages"><a href="#Configure-a-publishing-source-for-github-pages" class="headerlink" title="Configure a publishing source for github-pages "></a><a href="https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#enabling-github-pages-to-publish-your-site-from-master-or-gh-pages" target="_blank" rel="noopener">Configure a publishing source for github-pages </a></h3><h3 id="Problem-statement"><a href="#Problem-statement" class="headerlink" title="Problem statement"></a>Problem statement</h3><ul><li>Working with multiple branches.</li><li>How to push local branch into the specific remote?</li><li>How do I delete a Git branch both locally and remotely?</li><li><p>how to automate the “commit-and-push” process? (git)</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r <span class="comment">#remote/local</span></span><br><span class="line">  origin/master</span><br><span class="line">$ git remote -v <span class="comment"># List remote branch</span></span><br><span class="line">$ git branch -d gh-pages <span class="comment"># Delete local branch</span></span><br><span class="line">$ git remote remove gh-pages <span class="comment"># Delete remote branch</span></span><br><span class="line">$ git remote remove origin</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="Continuous-integration-in-Gitlab"><a href="#Continuous-integration-in-Gitlab" class="headerlink" title="Continuous integration in Gitlab?"></a>Continuous integration in Gitlab?</h1><blockquote><p>GitLab offers a continuous integration service. If you add a .gitlab-ci.yml file to the root directory of your repository, and configure your GitLab project to use a Runner, then each commit or push triggers your CI pipeline.</p><p>The <code>.gitlab-ci.yml</code> file tells the GitLab runner what to do. By default it runs a pipeline with three stages: build, test, and deploy. You don’t need to use all three stages; stages with no jobs are simply ignored.</p></blockquote><p>What Deploy means ?</p><p>If I test the site locally, and it works perfect, what is the necessity to run<br>on cloud to test the website.</p><p>You have witnessed that how hard developers maintain their product. They well tested their software, but there are problems on different platforms.</p><p><a href="https://about.gitlab.com/2015/02/03/7-reasons-why-you-should-be-using-ci/" target="_blank" rel="noopener">7 reasons why you should be using Continuous Integration</a>.</p><h1 id="Problems-solved"><a href="#Problems-solved" class="headerlink" title="Problems solved"></a>Problems solved</h1><ul><li><p><code>Invalid US-ASCII character "\xE2"</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Conversion error: Jekyll::Converters::Scss encountered an error <span class="keyword">while</span> converting <span class="string">'assets/css/style.scss'</span>:</span><br><span class="line">                  Invalid US-ASCII character <span class="string">"\xE2"</span> on line 5</span><br></pre></td></tr></tbody></table></figure><p><a href="http://talk.jekyllrb.com/t/how-to-deal-with--sass-converting-errors/911/2" target="_blank" rel="noopener">Someone’s experience helps to answer </a></p></li></ul><h1 id="One-more-word-to-the-wise"><a href="#One-more-word-to-the-wise" class="headerlink" title="One more word to the wise"></a>One more word to the wise</h1><p>You got to know the principle, mechanism, rule behind how things actually work. For instance, figure out how Jekyll organize the blog file system and what each file used for, like the role play by <code>_config.yml</code> in Jekyll.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Host Jekyll site on GitLab
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Static Site Generator" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Static-Site-Generator/"/>
    
    
      <category term="static site generator" scheme="https://complicatedphenomenon.gitlab.io/tags/static-site-generator/"/>
    
  </entry>
  
  <entry>
    <title>CRPropa</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/09/07/CRPROPA/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/09/07/CRPROPA/</id>
    <published>2018-09-07T11:57:06.000Z</published>
    <updated>2019-12-07T05:35:44.300Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c1f3b3e4f08331fba5e56db65ac17f7d4e475bc5766aea859d364c156f595875">92d05ceaceb2ffb07887af8ac2ebb6fd68077fa33829903e57db2b49198ee656dc8d03f8cbbd80c161c8bfe9e6a94b38b36877700f58465a3a1605d27652fc2ef4fa5a2e896381c92ad223fb63ca990180bdc2dbaafb6b54df5a9c774b27be9a8196eb443622d744ae0adee50efa206470cd3697a7d0137b6e9247fc7f97900047bb919230306be58b7a00f3a42414ace5d29a6a9b068e58b1f1af2d789affbd92469dda69e3a8b4e5bc1968fd73490f397b9cd71828589832d366213761549a1616c48a9e1e3b2472f8406073e909c3b0ce284f1fa46843b21734d7fe7a042a35a0137254a4acfadfaa5ae50ce3595b0023269f1715933f2756c2952b45dcd64dc6e05f9963717a6d5c4ea9954cd23bc16e96bff74deabab9b71cfb1346d8acdcfaa59efea3d72e2abd650f7501cab3754d7dd246868baac88815cd95c24a769074df02d6d7e2d7eaed7780fff233c0adb6f89110efe31a77d5384b6b0050879a8cb08ff6453dc04316bcccf2fbfd99407e40076228e8232290a7c6fde7750da512e6d25e6c4ed730eb31f7625416905e77fdb662f041170520316fe8362dcc15a97627e6d3d528c92e43b690e13e55d3f903a917ac75846d51087e4d0d7cf7ddd593b0c135850ff1b3113e489cab2f2c82f6cab27faea228fa6a9fd5a5ed2ad42af27a5b67c3385864bf354113ece016682bb92930efad989ce3d129a708fa5dc6eb3aa66ccc03c098b195b07b4514be767e49afbdba72c8dec2055eba50b6f0cfbb36d0733cbc4ff175ef0da1e46c3ae2e595a769162f2a6bfa30c39c314cc9f142bebeaf2ecfe811be61de0d0944030d6aa358c511c3e2a664857b02e123ea0e23c76ea4fd82d3d4e698f1141a6b277f593771cc6dd58eeea41d9326cfaa2cf9a4b1e68e148de918023de8010d33c781267b87647107d309cb4aca779ed102219edfaab739bd351df3184d1a899ba3c3404555c10d60f2d3bcb41f735b577d93a2513b0bcb641cc438214a39e94cb5b43ca2fc21303a569b13b96f5adf6e0dd6b65f1fccdf4cfe65d35df92c42ba52bd9f12999464d95ffa2de22bf1aa0cd6b5526dd2383d14f0672696dc58ba2e3eb5d5ffab6535b382b7eb7c31ae499eb22c42c5173a65bb17c44d60c869bf4edfdc9685bfc254c85cf4897068f39dd0660bc40283482822ff0a0b6e23fcc5f8e78cdd6866a6fe143fa7663f42d8249961a2c44fd0c36c5adb608eccad2e18c24cc5c1849eb1b8d51ae6ea73a46dad0ce29937bca39d0e1a3dc90b9b7eac125c36a0cfc37e22ad14d481d1b525ddecf0753cfb8f2791fb158e73ac0899d1b583b18cbd94b64fbd151b79cc499ac903e7b34ed9eccb3ac3d1dbbd5ba8d09fcceea35f9204555012ad3b8a99e42ef7211407b6df5c391ce86ec384f40e4a3c8339dd12232e1e8c8d21597ca8b98f142735da86fd85021cf79833c308d1326e89a9d4faf059f477918d53a4e1989e6c63875688f91164412a3895379d9e320de5ade91a9564f6ff3bee9bd73ee57af216cad24bbbf7d8be175e8f7b55b17b1a8d57b6503859ff141d7a8bb0b6061976f3c90c0023338a5b7a56a50b0599c441ed0350fc21d8a02b8aca9b5febe808777503f8a917c19dfd0fd626fdd0a9bf8df2a9176fa53f735c1d9e11b120c1611d150f3d6229022d1e3cc29a2f2fe9e25e8a343a96a7c95603fd12af942e001680d5ce05215427deec182a18e59e2c2491af9bb901945cc8918a218789083cc7dc8ddb045ee30facbb0e85ff2f750a1eb2fc4bf89ef259e1d967561176cd425e187f2adae5013db5bce6b444b17d353d874853a42066a26ffd259192b7e2537e3996009c213daef7bd547568da823df23626e815bf8da9b5689ceeacfafe1dfbbdb1a4b25201f3b885f43ab2eb641d9d4231bf31ae1c10a1e84700b6e58a6ad945297c9a19299165bc37cd1f2cf66611515c8b5849a6813532777b818ab35c3b5bc1131f3a937d7f63130cfafd5c7b0eeeba7734d4a35170c8a10c0f307ec138956f6a5429b3207ce301fbbc3b568f7f25d4b2537a0b8e8fa19dc65ac1d7c46c969e754637a565b8c58167ec05f5307fed533e32026d820d84eca82e4ff6e9cbec8e67207f5c20f91b99a6281e3a26e0c1ff1ffd786f728bf68f79bd7ff797f876a8181f6fd85395d43ae9907463ca2dee2d5ef51c17bf74138c19983ecc4974b8bf1b5439b5f3f2b2cf9d8ad594acd90c80abe5065d8ab073a4f15e59d6fd12645ae4e36332baf304453120f2aedc873ccd20f587ce09b18521e9bbca0f7c97187519c2569cd400eaa24fcd2b726a455a289360b09ad79e2473684f2598406dc8f930aeb471101020249798f3792c2df8e6d405039cef7456179c9720f0d84ceea663f83ad7a4524231ba23866b5cd1317d21e1a7100fc6265f47c63a8840e96fd61136140e9040e68c13ee6c53b9bc4f904ea7ebee33ae495b4cfe730e23b8fd94fb00196d4eada72462fcee163b19d2ea2585c64519a8c16b6d5e34ce6d1d79a1d78052804b357700f4f79081401b027661f90545cfc9f716d153b142995125a528c5625249137f5235ac17ac979f7dfe74d431b8562536cebffd5ff7e1381e8d738922585d8257e00cf1ae52eeeda00bdd54113c51f4adea84a9a98b1841bc5ce749c07e46307a9a76fa71c8dcedbefe8a66b5f9604e59bef143d6e1ee3f78defe8000fa35589aac49e820e5007d0c05018ce9f4cae598e16084e9542b1814ffb7e9ab0e2f3491f0e6d81947eecb0f32bb737e9e6611218c4575e624efd9b1c6bb77113e567c88fc9214a43c682e1ff8d208dcc3fb271820e5d1fabd9bc1fdbe2f9d8b4480642c1aa2d99cfea67d059dcb0a00fae8a5ad29353d4840c515cf2adb21d141c22756c0eefa8cd2bc5863943f98defbb5e9e85b3c54b5814f168cb204ed051aef48b8d8ae50b96b156b11349701a1df76ccc3fc3698a64456b5812394cb3ccb6cc8484d0cc1ae1407ce89d41589ab53aa52f292b13dcbde6a39fd118c5ca320c8a2fe334e2b31493d5b1e94fbaeec4472d82d36b46b64a2e4afae3be2600e35927c95516fe20c9944758ada773f58de4852b8c61c54d30ea5c3e0866851d2063e6ad092bcb11c5f68e9302378c307d7de57da768717b146ab456417512703dc96999a86ce93820a2f3e7498d62ab6d42c758cacd0556fdcf557f96c2d72cf612a92cb50ffeb5af47423e80654946879a0833eccd1a6c8a19f36017a2b047784ec7acc706c8f958f3be69b2341d234c027afb143f586d57267b02d0998c0137ea6cc4d42f30d015641c15e74e5840c5c358af0f6d001b95eef13639df5d4209444a98fe240057968930474137ebf81a3b1a1898980b7bbb93e51bef38020eb5aec4e8c18c25c9871d85369fd32d4fd37ae5647091d71f459c3d63c3ee53c543c13626fe50f7c4aa1b0387628ab428918af483e552d4668d7fe159aee7f1b4e1073e56af7e7a017c0985691e1def6b191ac81b39e5c34bd9999c227628a43dddc627d506c7e425c3ef2896caf5093f0688c759475d1856e837f76dbb7af44ef797a6a0c35d2f1fd86be8251a3f0246506a7b89546928dd972a863901aef275e51e0b2dd1baf5e3c9726373fc923b47d633df401b4db2615e8a018ab1c9e473483acc8a78f4d76d3a82eafd580231006f7bd47474256a58ac69b0eca098112c9f3e0f7d891b982752133a6e536ac817acef4ebad4d13c3b5edfc9f6e27ca3f71cd1d91ed78adfa8a40c48e2c5d6c4b941eac3e72df1e2985dfec9716a6ea75e0292fbe34f9a1799e6022328d3397acf3be1d298f7872dc5bf637492b39e4ebe3455a9093872e04875f0edde845e57f832ac4a48571ab86d268841adc62ac776706b9b32efa5907579763e12b845e23e1110d7983305784a86cd5950215bc2178ee390b0d32d4a1b6e165fd04b42001c074aa7c73b456c96ee159b901ebfe8650ba682b393a63ddb8224fdd0a7c1f73eaa39a7a4ecc2eaf98b6595d57f51b62836e69b871e2dd4bca87479246b4f3e52e404b11a93ad89d233ec30defc8dc2b8c5dcab2c1a6e08ecaffc029fdb81c1b1fcbd68db4bb00c5a57311a56361a1823a8d6944d0d4d9c47099695ba083e5767cafbeeba48c108cc24f8a2f4dab578f776c44c5f22d5ad74593cf0efa69934b44133239f63f6cb9b708b903f189298bd5195e419469166d973115c5356a56e76dc36f45cf7c30d043b1838d798d132637069cad788d490341c32f846cc5f5f7162b0e8e2bbc5cee224eca02780c6fa2bab8754dc6d09347e0c1d41de1a73648f86d332241327f2ef5d3f3e60bef778fbb05f3fabfb07223c450f5c644c53f255be023ddd512e0b42de509dbf5a21cd3a5787a1e9b52c39839eda4d5eb6d7fa672cfa26518f4d958a6f35506dfe72c0b6ac48f0aaa87a1153fac88971a276c18a35d882f7e57dcf33c005c7594b73b7ca4d2aeba557cdc1a30ec7f17f12ed144d8ea3d7bac45a0e5f43394a33ffea114621b893394bd9ed88f503d16a4d3e56f5daaf6932c4aa07c167e002e45c5b19c1dab7bd865767c830e442493319365a704cfb6208e8be45b52d3ef3878c4fb950cce179ae470d1254676422020e8451051c662da2abf13ff71a6f18fdd24ce23564b17be023ef4f1d92cf9a1659371e107fc5befc834f7e628dd4149e5b2cb03583518cf991a4084a49805ef69b8f86601ed287e662bce4900c233bcaa598d8cf16878c1003c90771dd454818738f9718d3456dafa4626b0cf6a4a85afb8b84ac94cbad478a6fb86608b4ca3fddd158ef8e0fb609542a9aff1abbd153c8f4d77432d90112b8cc968b8d649eef551beb184c37798c851dc4272a049928bd0e1c252acaf05bb385cb81b7b9634566ae648cbb0050fc44463c6cdce31d151f199ababee097a0dad120c30f755b1ce9aed3e5b4dc578624df700e3865f1a271d1428e42cd015f69e0f1add41256ce46cc4eda44f04cae0e7f86add2f4e4e0f5937aefc88394f4164af5daa115903ed6938bc6b40a794d21bf80260bfd54ac3b9a17f7c63df009582e7ccaa91ca32f6d538cab602aad6524a73346e6d4a30f73c8c0ed3ccc69d3b5964022889a0fc3b7217</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      An astrophysical simulation framework for propagating extraterrestrial ultra-high energy particles.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Code in Physics" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Code-in-Physics/"/>
    
    
      <category term="Astrophysics" scheme="https://complicatedphenomenon.gitlab.io/tags/Astrophysics/"/>
    
  </entry>
  
  <entry>
    <title>Crawler</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/07/04/spider/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/07/04/spider/</id>
    <published>2018-07-04T13:45:30.000Z</published>
    <updated>2019-11-12T14:02:52.034Z</updated>
    
    <content type="html"><![CDATA[<p>Zhihu starts to feed users with unbearable amounts of advertisement and I don’t know a plugin to get rid of these irrelevant annoying things, I decide to grasp the necessary stuff via crawler. Thankfully I found someone has write such a tool.<br><a id="more"></a></p><h1 id="Crawl-from-Zhihu"><a href="#Crawl-from-Zhihu" class="headerlink" title="Crawl from Zhihu"></a>Crawl from Zhihu</h1><p>Here I introduce a library, <a href="https://github.com/7sDream/zhihu-oauth" target="_blank" rel="noopener">zhihu-oauth</a>.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ul><li>pip install zhihu_oauth (bad choice)</li><li>python setup.py install (good choice since you learn from the author how to make a useful tool.)</li></ul><h2 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h2><h3 id="login"><a href="#login" class="headerlink" title="login"></a>login</h3><ul><li><p>Through command line in python shell as showed in below (Collect user’s follower).</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(py3<span class="number">.6</span>Env) $ ipython</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.5</span> |Anaconda custom (<span class="number">64</span>-bit)| (default, Apr <span class="number">29</span> <span class="number">2018</span>, <span class="number">16</span>:<span class="number">14</span>:<span class="number">56</span>)</span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> <span class="keyword">or</span> <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython <span class="number">6.4</span><span class="number">.0</span> -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> zhihu_oauth <span class="keyword">import</span> ZhihuClient</span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">from</span> zhihu_oauth.exception <span class="keyword">import</span> NeedCaptchaException</span><br><span class="line">In [<span class="number">4</span>]: client = ZhihuClient()</span><br><span class="line">In [<span class="number">5</span>]: <span class="keyword">try</span>:</span><br><span class="line">   ...:     client.login(<span class="string">'user name'</span>,<span class="string">'PW'</span>)</span><br><span class="line">   ...: <span class="keyword">except</span> NeedCaptchaException:</span><br><span class="line">   ...:     <span class="keyword">with</span> open(<span class="string">'a.gif'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">   ...:         f.write(client.get_captcha())</span><br><span class="line">   ...:     captcha=input(<span class="string">'please input captcha:'</span>)</span><br><span class="line">   ...:     client.login(<span class="string">'+8615210311877'</span>,<span class="string">'wmca*******'</span>, captcha)</span><br><span class="line">   ...:     </span><br><span class="line">please input captcha:xxxx</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>or</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> zhihu_oauth <span class="keyword">import</span> ZhihuClient, Answer, Article</span><br><span class="line">client = ZhihuClient()</span><br><span class="line">client.login_in_terminal(username=<span class="keyword">None</span>, password=<span class="keyword">None</span>, use_getpass=<span class="keyword">True</span>, captcha_filename=<span class="keyword">None</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><p>Through adding statement <code>client.load_token('token.pkl')</code> into python script.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals, print_function</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> zhihu_oauth <span class="keyword">import</span> ZhihuClient</span><br><span class="line"></span><br><span class="line">TOKEN_FILE = <span class="string">'token.pkl'</span></span><br><span class="line">client = ZhihuClient()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(TOKEN_FILE):</span><br><span class="line">    client.load_token(TOKEN_FILE)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    client.login_in_terminal()</span><br><span class="line">    client.save_token(TOKEN_FILE)</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="Collect-who-am-I-following"><a href="#Collect-who-am-I-following" class="headerlink" title="Collect who am I following"></a>Collect who am I following</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">In [ ]: me = client.me()</span><br><span class="line">In [ ]: print(<span class="string">'name'</span>, me.name)</span><br><span class="line">name czfzdxx</span><br><span class="line">In [ ]: <span class="keyword">for</span> following <span class="keyword">in</span> me.followings:</span><br><span class="line">    ...:     <span class="keyword">if</span> following.over:</span><br><span class="line">    ...:         print(following.over_reason)</span><br><span class="line">    ...:         <span class="keyword">continue</span></span><br><span class="line">    ...:     print(following.name)</span><br></pre></td></tr></tbody></table></figure><h3 id="A-question’s-answer-and-every-answer’s-comments"><a href="#A-question’s-answer-and-every-answer’s-comments" class="headerlink" title="A question’s answer and every answer’s comments"></a>A question’s answer and every answer’s comments</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">q2 = client.question(<span class="number">43454328</span>)</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> q2.answers:</span><br><span class="line">    <span class="keyword">if</span> i < <span class="number">4</span>: <span class="comment"># define the number of answers you want to print</span></span><br><span class="line">        <span class="keyword">print</span> (q.content)</span><br><span class="line">        <span class="keyword">print</span> (q.author.name)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"---------------------"</span>)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"|     DIVID LINE    |"</span>)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"---------------------"</span>)</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span>  q.comments:</span><br><span class="line">            <span class="keyword">print</span> (c.author.name)</span><br><span class="line">            <span class="keyword">print</span> (c.content)</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"---------------------"</span>)</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"---------------------"</span>)</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        exit()</span><br></pre></td></tr></tbody></table></figure><h4 id="Collect-an-user’s-information"><a href="#Collect-an-user’s-information" class="headerlink" title="Collect an user’s information"></a>Collect an user’s information</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">me = client.me()</span><br><span class="line"></span><br><span class="line">collection = client.collection(<span class="number">128015194</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'collection_never_heard.html'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> the_file:</span><br><span class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> collection.contents:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isinstance(content, Answer):</span><br><span class="line">            answer = content</span><br><span class="line">            the_file.write(<span class="string">'Question:'</span> + answer.question.title)</span><br><span class="line">            the_file.write(<span class="string">''</span>)</span><br><span class="line">            the_file.write(answer.content)</span><br><span class="line">            the_file.write(<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">elif</span> isinstance(content, Article):</span><br><span class="line">            article = content</span><br><span class="line">            the_file.write(<span class="string">'Essay:'</span> + article.title)</span><br><span class="line">            the_file.write(<span class="string">''</span>)</span><br><span class="line">            the_file.write(article.content)</span><br><span class="line">            the_file.write(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">hst = client.people(<span class="string">'stephenhky'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'hst_answer.html'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> the_file:</span><br><span class="line">    <span class="keyword">for</span> huida <span class="keyword">in</span> hst.answers:</span><br><span class="line">        the_file.write(<span class="string">'<br/>'</span>)</span><br><span class="line">        the_file.write(<span class="string">"Question : "</span> +huida.question.detail)</span><br><span class="line">        the_file.write(<span class="string">"Anser from stephenhky: "</span> + huida.content)</span><br><span class="line">        <span class="keyword">for</span> comment <span class="keyword">in</span> huida.comments:</span><br><span class="line">            the_file.write(<span class="string">"Comment's to stephenhky's answer: "</span> + comment.content)</span><br></pre></td></tr></tbody></table></figure><p>See? we don’t have to click around and copy then paste to gather information. That is history now.</p><p>An advanced operation would be writing the data into the database.</p><h2 id="Extract-the-specific-information-from-available-data"><a href="#Extract-the-specific-information-from-available-data" class="headerlink" title="Extract the specific information from available data"></a>Extract the specific information from available data</h2><p>With the help of <code>BeautifulSoup</code>, first, you can formatted the raw information.<br></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(open(<span class="string">"collection_never_head.html"</span>),<span class="string">'html.parser'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'bs4_never_heard.html'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> the_file:</span><br><span class="line">    the_file.write(soup.prettify())</span><br></pre></td></tr></tbody></table></figure><p></p><p>To avoid <code>RecursionError: maximum recursion depth exceeded</code><br></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    soup = BeautifulSoup(open(<span class="string">"hst_answer.html"</span>),<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'hst_bs.html'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> the_file:</span><br><span class="line">        the_file.write(soup.prettify())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">'fail'</span>)</span><br></pre></td></tr></tbody></table></figure><p></p><p>Then you can extract specific information. However, it requires further knowledge about regular expression and search method.</p><h1 id="Crawl-from-twitter"><a href="#Crawl-from-twitter" class="headerlink" title="Crawl from twitter"></a>Crawl from twitter</h1><p>Tool involved:</p><ul><li><code>tweepy</code></li></ul><h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><p>Register your app. Go to <a href="https://developer.twitter.com/apps" target="_blank" rel="noopener">https://developer.twitter.com/apps</a> and follow the instructions, if it goes succeed you should get the keys and tokens.</p><h2 id="Painful-operation"><a href="#Painful-operation" class="headerlink" title="Painful operation"></a>Painful operation</h2><p>将socks5代理转换为http代理来支持tweepy访问twitter REST API.</p><p>For the reason of GFW, Here I need to use VPS to fetch twitter contents, <code>tweepy</code> use proxy of <code>https</code>, instead of <code>socks5</code>. So I need <code>polipo</code> to convert Shadowsocks into an HTTP proxy. When I follow the instruction <a href="http://gwang-cv.github.io/2017/09/12/%E4%B8%BA%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AEShadowsocks%E4%BB%A3%E7%90%86/" target="_blank" rel="noopener">Setup shadowsocks proxy for terminal</a>(Also a repeated post <a href="https://github.com/Quinton/blog/issues/2#issue-279017422" target="_blank" rel="noopener">here</a>, by the way, neither one indicate the citation), I met the problem<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/polipo/1.1.1/homebrew.mxcl.polipo.plist: Could not find specified service</span><br></pre></td></tr></tbody></table></figure><p></p><p>Then I find <a href="https://stackoverflow.com/a/38732004/7583919" target="_blank" rel="noopener">a close case</a> and solve the problem above,<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br><span class="line">$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br></pre></td></tr></tbody></table></figure><p></p><p>Next problem came when testing if <code>polipo</code> can work or not, I got <code>Proxy error: 504 Connect to www.google.com:80 failed</code>.</p><p>It’s a painful trouble, the problem is I should use <code>http_proxy=http://localhost:8123</code> instead. Inspired from the <a href="https://github.com/yangfeicheung/Shadowsocks-X/issues/39" target="_blank" rel="noopener">Shadowsocks-X app usage</a>.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.toptal.com/python/twitter-data-mining-using-python" target="_blank" rel="noopener">Mining twitter data with python</a></li><li><a href="https://marcobonzanini.com/2015/03/02/mining-twitter-data-with-python-part-1/" target="_blank" rel="noopener">A series tutorial mining twitter data </a></li><li><a href="http://gwang-cv.github.io/2017/09/12/%E4%B8%BA%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AEShadowsocks%E4%BB%A3%E7%90%86/" target="_blank" rel="noopener">Setup shadowsocks proxy for terminal</a></li></ul><p><img src="https://media.giphy.com/media/qfF4Q1q6g4QRW/giphy.gif" alt></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Gather large amount of information on some platform like Zhihu and StackOverflow, isn&#39;t that awesome?
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Crawler" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Crawler/"/>
    
    
      <category term="Crawler" scheme="https://complicatedphenomenon.gitlab.io/tags/Crawler/"/>
    
  </entry>
  
  <entry>
    <title>Cadabra2</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/06/15/Cadabra/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/06/15/Cadabra/</id>
    <published>2018-06-15T00:07:34.000Z</published>
    <updated>2019-12-29T06:57:58.897Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/6L8kvnzW3VkSQ/giphy.gif" alt></p><h2 id="A-sense-of-romance"><a href="#A-sense-of-romance" class="headerlink" title="A sense of romance"></a>A sense of romance</h2><p><code>Cadabra</code> is the first professional tool I’ve ever met for symbolic calculation, which is also a tool I always dreamed to invent someday on my own. The author has developed it for more than ten years in his spare time, he has done a great job.</p><a id="more"></a><h2 id="git-accumulate-a-very-very-long-history"><a href="#git-accumulate-a-very-very-long-history" class="headerlink" title=".git accumulate a very very long history"></a><code>.git</code> accumulate a very very long history</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/kpeeters/cadabra2.git</span><br><span class="line">Cloning into <span class="string">'cadabra2'</span>...</span><br><span class="line">...</span><br><span class="line">Receiving objects: 100% (272142/272142), 145.43 MiB | 1.48 MiB/s, <span class="keyword">done</span>.</span><br></pre></td></tr></tbody></table></figure><p>Astonished!</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ du -a -h --max-depth=1 cadabra2/| sort -hr</span><br><span class="line">228Mcadabra2/</span><br><span class="line">154Mcadabra2/.git</span><br><span class="line">53M    cadabra2/frontend</span><br><span class="line">...</span><br><span class="line">4.0Kcadabra2/CODE_OF_CONDUCT.md</span><br><span class="line"></span><br><span class="line">$ du -a -h --max-depth=1 cadabra2/.git/ | sort -hr</span><br><span class="line">154Mcadabra2/.git/</span><br><span class="line">153Mcadabra2/.git/objects</span><br><span class="line">...</span><br><span class="line">4.0Kcadabra2/.git/branches</span><br></pre></td></tr></tbody></table></figure><p>Is there a flag to pass to git when doing a clone, say don’t clone the .git directory? If not, how about a flag to delete the .git directory after the clone?</p><ul><li><p><a href="https://stackoverflow.com/q/11497457" target="_blank" rel="noopener">A simplified solution</a></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 --branch=master git://someserver/somerepo dirformynewrepo</span><br></pre></td></tr></tbody></table></figure><p>What happens when you clone a project via <code>git clone --depth=1 --branch=master xxx</code>?</p></li><li><p><a href="https://www.atlassian.com/blog/git/handle-big-repositories-git" target="_blank" rel="noopener">A detailed solution</a></p><p>Why there is big repositories?</p><p>If you think about it, there are broadly two major reasons for repositories growing massive:</p><ul><li>They accumulate a very very long history (the project grows over a very long period of time and the baggage accumulates)</li><li>They include huge binary assets that need to be tracked and paired  together with code.</li></ul></li></ul><h2 id="Cadabra2-installation"><a href="#Cadabra2-installation" class="headerlink" title="Cadabra2 installation"></a>Cadabra2 installation</h2><p>I have used Cadabra2 on Ubuntu, since it got well tested binary package, so I don’t pay much efforts to use it unlike running on Mac.</p><h3 id="Install-it-via-Homebrew"><a href="#Install-it-via-Homebrew" class="headerlink" title="Install it via Homebrew"></a>Install it via <code>Homebrew</code></h3><p>I was aware of the fact that the installation method on Mac is not well tested</p><blockquote><p> The problem is probably that the Anaconda python is first in your PATH, or that <code>/usr/local/bin/python3</code>is a symlink to the Anaconda python. What do you get if you do which python3 from a terminal? In order to change this, you need to make sure that <code>/usr/local/Cellar/bin/python3</code> is picked up when you type python3.</p></blockquote><p>Run <code>export PATH=/usr/local/Cellar/bin:${PATH}</code> in terminal before run <code>cadabra2</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ python3</span><br><span class="line">Python 3.7.0 (default, Jun 28 2018, 07:39:16)</span><br><span class="line">[Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">>>> <span class="built_in">exit</span>()</span><br><span class="line">$ <span class="built_in">history</span> | grep <span class="built_in">export</span></span><br><span class="line">$ <span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">$ python3</span><br><span class="line">Python 3.7.2 (default, Dec 27 2018, 07:35:06)</span><br><span class="line">[Clang 10.0.0 (clang-1000.11.45.5)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">>>> <span class="built_in">exit</span>()</span><br><span class="line">$ <span class="built_in">which</span> pip3</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/pip3</span><br></pre></td></tr></tbody></table></figure><div class="note info"> 👽You must set up the environment properly.</div><h3 id="Compile-Cadabra2-from-source"><a href="#Compile-Cadabra2-from-source" class="headerlink" title="Compile Cadabra2 from source"></a>Compile Cadabra2 from source</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/kpeeters/cadabra2</span><br><span class="line"><span class="built_in">cd</span> cadabra2</span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake -DENABLE_MATHEMATICA=OFF ..</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></tbody></table></figure><p>It works well<br></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cadabra2</span><br><span class="line">Cadabra 2.2.4 (build 1.b409dd2 dated 2019-01-02)</span><br><span class="line">Copyright (C) 2001-2018  Kasper Peeters <kasper.peeters@phi-sci.com></span><br><span class="line">Using SymPy version 1.3</span><br><span class="line">Info at http://cadabra.science/</span><br><span class="line">Available under the terms of the GNU General Public License v3</span><br><span class="line">$ cadabra-gtk</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="Building-the-Cadabra-Jupyter-kernel"><a href="#Building-the-Cadabra-Jupyter-kernel" class="headerlink" title="Building the Cadabra Jupyter kernel"></a><a href="https://github.com/kpeeters/cadabra2/blob/master/JUPYTER.rst" target="_blank" rel="noopener">Building the Cadabra Jupyter kernel</a></h2><p>To use cadabra kernel in the Jupyter notebook, build cadabra2 kernel at first.<br><span style="font-family: papyrus; font-size:1.5em; color: red"><br>! warning: <strong>Create an isolated environment, don’t mixed up with your base environment.</strong></span></p><p>(I thought I learned this lesson very well in long before, yet I don’t realize I was making the same mistake for a long time.)</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install g++ make libboost-all-dev</span><br><span class="line">$ conda create -n cadabra</span><br><span class="line">$ conda activate cadabra</span><br><span class="line">$ conda install cmake pkg-config glibmm zeromq cppzmq xtl cryptopp  sqlite util-linux xeus nlohmann_json sympy  jupyter -c conda-forge</span><br><span class="line">$ <span class="built_in">cd</span> cadabra2 && mkdir build && <span class="built_in">cd</span> build</span><br><span class="line">$ cmake -DENABLE_JUPYTER=ON -DENABLE_FRONTEND=OFF -DCMAKE_INCLUDE_PATH=<span class="variable">${HOME}</span>/anaconda3/include -DCMAKE_LIBRARY_PATH=<span class="variable">${HOME}</span>/anaconda3/lib -DCMAKE_INSTALL_PREFIX=<span class="variable">${HOME}</span>/anaconda3 ..</span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br><span class="line">`</span><br></pre></td></tr></tbody></table></figure><p>If you don’t find cadabra kernel after you launch jupyter notebook, try to restart it several times.</p><p>try the example code:</p><ul><li><a href="https://cadabra.science/static/cadabra_in_ipython.nb.html" target="_blank" rel="noopener">https://cadabra.science/static/cadabra_in_ipython.nb.html</a></li></ul><h2 id="cadabra2-vs-einsteinpy"><a href="#cadabra2-vs-einsteinpy" class="headerlink" title="cadabra2 vs einsteinpy"></a>cadabra2 vs <a href="https://:*****@github.com/einsteinpy/einsteinpy" target="_blank" rel="noopener"><code>einsteinpy</code></a></h2><ul><li>cadabra2 has a better taste and a consistent style.</li></ul><p><span style="font-family: papyrus; font-size:1.5em; color: red"><br>Contents remains to be continued …</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Cadabra is a symbolic computer algebra system (CAS) designed specifically for the solution of problems encountered in field theory. It set an excellent example of building a software, which could work independently and also can be integrated into other tools.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Code in Physics" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Code-in-Physics/"/>
    
    
      <category term="symbolic computation" scheme="https://complicatedphenomenon.gitlab.io/tags/symbolic-computation/"/>
    
  </entry>
  
  <entry>
    <title>Vegas and Monte Carlo integration</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/06/15/Vegas/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/06/15/Vegas/</id>
    <published>2018-06-14T22:26:14.000Z</published>
    <updated>2019-12-24T12:22:15.949Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/o7cWsa4hC2rPa/giphy.gif" alt></p><a id="more"></a><h1 id="Vegas-algorithm"><a href="#Vegas-algorithm" class="headerlink" title="Vegas algorithm"></a>Vegas algorithm</h1><p>Vegas have been implemented in several ways. including</p><ul><li>Fortran language</li><li>C / C++ language</li><li><p>Cython & numpy</p><p>This implementation relies upon Cython<sup><a href="#fn_1" id="reffn_1">1</a></sup> for its speed and <code>numpy</code> for array processing. It also uses <code>matplotlib</code> for graphics and <code>mpi4py</code> for <code>MPI</code> support, but graphics and <code>MPI</code> are optional.</p></li></ul><h2 id="Cython-tutorial"><a href="#Cython-tutorial" class="headerlink" title="Cython tutorial"></a><a href="https://cython.readthedocs.io/en/latest/src/tutorial/" target="_blank" rel="noopener">Cython tutorial</a></h2><h2 id="Install-vegas-library"><a href="#Install-vegas-library" class="headerlink" title="Install vegas library"></a>Install vegas library</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone --depth=<span class="number">1</span> --branch=master git@github.com:gplepage/vegas.git</span><br></pre></td></tr></tbody></table></figure><blockquote><p><code>vegas</code> supports multi-processor evaluation of integrands using <code>MPI</code>, via the Python module <code>mpi4py</code> (which must be installed separately). This can shorten execution time substantially when the integrand is costly to evaluate.</p></blockquote><p>To enable advanced function of multi-processor evaluation, 2 necessary library is required.</p><ul><li><p>MPI</p><ul><li>Download the code from its official site.<ul><li><a href="https://wiki.helsinki.fi/display/hugg/open+mpi+install+on+mac+os+x" target="_blank" rel="noopener">Instructions to install openMPI on mac</a>.</li></ul></li><li><code>brew install open-mpi</code></li></ul></li><li><p><code>mpi4py</code></p><p><code>pip install mpi4py</code></p></li></ul><h2 id="Structure-of-Vegas-code"><a href="#Structure-of-Vegas-code" class="headerlink" title="Structure of Vegas code"></a>Structure of <a href="https://github.com/gplepage/vegas" target="_blank" rel="noopener">Vegas code</a></h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ tree vegas/src</span><br><span class="line">vegas/src/</span><br><span class="line">├── vegas</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── _vegas.c</span><br><span class="line">│   ├── _vegas.pxd</span><br><span class="line">│   ├── _vegas.pyx</span><br><span class="line">│   └── _version.py</span><br><span class="line">└── vegas.pxd</span><br></pre></td></tr></tbody></table></figure><h1 id="Application-of-vegas"><a href="#Application-of-vegas" class="headerlink" title="Application of vegas"></a>Application of vegas</h1><h2 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h2><script type="math/tex; mode=display">C \int _ { - 1 } ^ { 1 } d x _ { 0 } \int _ { 0 } ^ { 1 } d x _ { 1 } \int _ { 0 } ^ { 1 } d x _ { 2 } \int _ { 0 } ^ { 1 } d x _ { 3 } e ^ { - 100 \sum _ { d } \left( x _ { d } - 0.5 \right) ^ { 2 } }</script><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> vegas</span><br><span class="line">   ...: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">   ...:</span><br><span class="line">   ...: <span class="comment"># Integrand: ridge of N Gaussians spread evenly along the diagonal</span></span><br><span class="line">   ...: <span class="function"><span class="keyword">def</span> <span class="title">ridge</span><span class="params">(x)</span>:</span></span><br><span class="line">   ...:     N = <span class="number">10000</span></span><br><span class="line">   ...:     dim = <span class="number">4</span></span><br><span class="line">   ...:     x0 = np.floor(x[<span class="number">-1</span>] * N) / (N - <span class="number">1.</span>)</span><br><span class="line">   ...:     dx2 = <span class="number">0.0</span></span><br><span class="line">   ...:     <span class="keyword">for</span> xd <span class="keyword">in</span> x[:<span class="number">-1</span>]:</span><br><span class="line">   ...:         dx2 += (xd - x0) ** <span class="number">2</span></span><br><span class="line">   ...:     <span class="keyword">return</span> np.exp(<span class="number">-100.</span> * dx2) *  (<span class="number">100.</span> / np.pi) ** (dim / <span class="number">2.</span>)</span><br><span class="line">   ...:</span><br><span class="line">   ...: <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">   ...:     integ = vegas.Integrator(<span class="number">5</span> * [[<span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">   ...:     <span class="comment"># adapt</span></span><br><span class="line">   ...:     integ(ridge, nitn=<span class="number">10</span>, neval=<span class="number">5e4</span>)</span><br><span class="line">   ...:     <span class="comment"># final results</span></span><br><span class="line">   ...:     result = integ(ridge, nitn=<span class="number">10</span>, neval=<span class="number">5e4</span>)</span><br><span class="line">   ...:     print(<span class="string">'result = %s    Q = %.2f'</span> % (result, result.Q))</span><br><span class="line">   ...:</span><br><span class="line">   ...: <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   ...:     main()</span><br><span class="line">   ...:     </span><br><span class="line"></span><br><span class="line">result = <span class="number">0.8512</span>(<span class="number">37</span>)    Q = <span class="number">0.47</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Principle-explanation"><a href="#Principle-explanation" class="headerlink" title="Principle explanation"></a>Principle explanation</h2><h3 id="Random-number-generator"><a href="#Random-number-generator" class="headerlink" title="Random number generator"></a>Random number generator</h3><p>Random number is frequently used in programming without doubting how it worked. Are the number generated by random number generator truly independent of each other.</p><h1 id="Statistics"><a href="#Statistics" class="headerlink" title="Statistics"></a>Statistics</h1><ul><li><a href="https://www.quora.com/What-are-the-best-YouTube-statistics-lectures" target="_blank" rel="noopener">https://www.quora.com/What-are-the-best-YouTube-statistics-lectures</a>?</li><li><a href="https://en.wikipedia.org/wiki/Gamma_distribution" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Gamma_distribution</a>.</li><li><a href="https://faculty.math.illinois.edu/~r-ash/Stat.html" target="_blank" rel="noopener">https://faculty.math.illinois.edu/~r-ash/Stat.html</a>.</li></ul><p><a href="https://en.wikipedia.org/wiki/Chi-squared_test#Example_chi-squared_test_for_categorical_data" target="_blank" rel="noopener">Appropriate examples</a> helps a lot.</p><p><span style="font-family: New York Times; font-size:1.5em; color: red"><br>Contents remains to be continued …</span></p><p>I am back, so I need to understand many crucial things, how, find enough appropriate resources then dive in.</p><ol><li>Search on Github, MCMC applied in astrophysics or particle physics. The seminar or workshop is good, you can catch people working on what you’re interested in. It’s not gonna work, few people are open and passionate about their work.</li><li>Follow a hard kernel book. Too hard to be helpful!</li></ol><blockquote id="fn_1"><sup>1</sup>. The fundamental nature of Cython is that Cython is Python with C data types.<a href="#reffn_1" title="Jump back to footnote [1] in the text."> ↩</a></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      An algorithm for Multiple Integral.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Algorithm" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Algorithm/"/>
    
    
      <category term="HPC" scheme="https://complicatedphenomenon.gitlab.io/tags/HPC/"/>
    
  </entry>
  
  <entry>
    <title>Django v.s web.py</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/06/15/django/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/06/15/django/</id>
    <published>2018-06-14T22:25:41.000Z</published>
    <updated>2019-12-07T05:35:44.304Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/hJ6Ff8TrrtG92/giphy.gif" alt><br><a id="more"></a></p><h1 id="Forward"><a href="#Forward" class="headerlink" title="Forward"></a>Forward</h1><p>Methods of building feature-rich applications is getting considerably complicated. For any web developers or designers, a web framework is a blessing in disguise as it offers them flexibility and multiple options to explore and save their invaluable time.  If these frameworks were not there, web development could have, literally, become really difficult as you need to take care of so many things(What kind of things?).</p><p>Here I introduce 2 back-end web development frameworks, <code>web.py</code> and <code>Django</code>.  For what kind of reason?<br>Well, <code>web.py</code> is created by a kind, intelligent, wise person, Aaron Swartz, and I like him a lot, he was a visionary, I would like to take a close look at his work. Moreover, only one tool will blind you seeing from a diverse and more fair perspective, which eliminate bias on a tool.</p><h1 id="web-py"><a href="#web-py" class="headerlink" title="web.py"></a>web.py</h1><p><img src="http://webpy.org/static/webpy.gif" alt></p><h2 id="The-web-py-Philosophy"><a href="#The-web-py-Philosophy" class="headerlink" title="The web.py Philosophy"></a><a href="http://webpy.org/philosophy" target="_blank" rel="noopener">The <code>web.py</code> Philosophy</a></h2><blockquote><p>Think about the ideal way to write a web app. Write the code to make it happen</p></blockquote><h2 id="Installing-from-a-repository"><a href="#Installing-from-a-repository" class="headerlink" title="Installing from a repository"></a>Installing from a repository</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/webpy/webpy.git</span><br></pre></td></tr></tbody></table></figure><p>There is a document named docs written in rST language. I need to take a look at it, The appropriate way is to decode it with <em>sphnix</em> which I have installed already, nevertheless, that is a different version and has contradictions with the one Aaron used.<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(webpy) wm@vampire:...$ pip install sphnix</span><br></pre></td></tr></tbody></table></figure><p></p><hr><p>Set up an environment for running <code>web.py</code>.</p><p>Nevertheless, I can’t fully experience the usage of webpy since it’s depends on PostgreSQL which supports part of the LTS Ubuntu version.</p><h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><p>Since Django is well documented, every problem you might encounter has already addressed in detail. Therefore, I emphasize the working flow, and the working mechanism behind.</p><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p><img src="/uploads/Django.png" alt><br>Download the source code from <a href="/uploads/Django.xmind">here</a>.</p><p><img src="/uploads/Django.svg" alt><br>Download the source code from <a href="/uploads/Django.dot">here</a>.</p><h2 id="Mechanism-behind"><a href="#Mechanism-behind" class="headerlink" title="Mechanism behind"></a>Mechanism behind</h2><p><img src="/uploads/DjangoView.svg" alt></p><p>Download <a href="/uploads/DjangoView.dot">source code</a></p><p>Use <code>get_object_or_404</code> to try to get a list of values from my database.</p><h3 id="Explain-in-plain-words"><a href="#Explain-in-plain-words" class="headerlink" title="Explain in plain words"></a>Explain in plain words</h3><p>Use concepts view, url pattern and templates in Django to implement a functionality.</p><p>A view function, or <em>view</em> for short, is simply a Python function that takes a web request and returns a web response. This response can be the HTML contents of a Web page, or a redirect, or a 404 error, or an XML document, or an image, etc. Example: You use view to create web pages, note that you need to associate a view to a URL to see it as a web page.</p><div class="note info"><p> 👽<br>What is HTTP?<br>The Hypertext Transfer Protocol (HTTP) is designed to enable communications between clients and servers.<br>HTTP works as a request-response protocol between a client and server.<br>A web browser may be the client, and an application on a computer that hosts a web site may be the server.<br>Example: A client (browser) submits an HTTP request to the server; then the server returns a response to the client. The response contains status information about the request and may also contain the requested content</p></div><h2 id="Resources-to-dive-into-Django"><a href="#Resources-to-dive-into-Django" class="headerlink" title="Resources to dive into Django"></a>Resources to dive into Django</h2><p>Right resource makes you thrive.</p><ul><li><a href="https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/" target="_blank" rel="noopener">Simple is better than complex provided by Vitor Freitas. </a></li><li>Django 2 by example by Antonio Mele</li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/skeleton_website" target="_blank" rel="noopener">Django Tutorial Part 2: Creating a skeleton website</a></li><li><p><a href="https://www.djangosites.org/with-source/" target="_blank" rel="noopener">Django site with source</a></p><p>This is an good project, site powered by Django can be submitted to <a href="www.djangosites.org">www.djangosites.org</a></p></li></ul><p>I got stuck with <a href="https://stackoverflow.com/questions/53115417/post-detail-is-missing" target="_blank" rel="noopener">this</a>. The post detail is missed, I can’t see the detail of every post.</p><h1 id="web-py-and-Django"><a href="#web-py-and-Django" class="headerlink" title="web.py and Django"></a>web.py and Django</h1><p><code>web.py</code> criticize  <code>Django</code>.</p><ul><li><code>Django</code> lets you write web apps in Django. <code>TurboGears</code> lets you write web apps in <code>TurboGears</code>. <code>web.py</code> lets you write web apps in Python.</li></ul><p>The advantage of Django.</p><p>There is a fact that if you are immature to using the tools, you see little about its limitation.</p><p>Contents to be continued…</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      In memory of Aaron Swartz.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Django" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Django/"/>
    
    
      <category term="web development" scheme="https://complicatedphenomenon.gitlab.io/tags/web-development/"/>
    
  </entry>
  
  <entry>
    <title>Apache</title>
    <link href="https://complicatedphenomenon.gitlab.io/2018/06/15/Apache/"/>
    <id>https://complicatedphenomenon.gitlab.io/2018/06/15/Apache/</id>
    <published>2018-06-14T22:25:33.000Z</published>
    <updated>2019-11-12T14:02:52.026Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="df1f8b058dd33abedbc166a6ced5c57fb9dffbca7348c2398a2912a83976c40d"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
      <category term="Technology" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/"/>
    
      <category term="Parallel Programming" scheme="https://complicatedphenomenon.gitlab.io/categories/Technology/Parallel-Programming/"/>
    
    
      <category term="data analysis platform" scheme="https://complicatedphenomenon.gitlab.io/tags/data-analysis-platform/"/>
    
      <category term="machine learning" scheme="https://complicatedphenomenon.gitlab.io/tags/machine-learning/"/>
    
  </entry>
  
</feed>
